{
	"id": "29c83a14e7a323019a7c69d694b870c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"reactsPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ReactLiquidityPool is Ownable {\r\n    IERC20 public reactToken;\r\n\r\n    struct Pool {\r\n        uint256 totalShares;\r\n        uint256 totalDeposited;\r\n        mapping(address => uint256) userShares;\r\n    }\r\n\r\n    struct NFTPool {\r\n        mapping(uint256 => Pool) reacts; // Mapping from react sub ID to Pool\r\n    }\r\n\r\n    // Changed from public to private to comply with Solidity restrictions\r\n    mapping(uint256 => NFTPool) private nftPools; // NFT ID to NFTPool\r\n\r\n    constructor(address _reactToken) Ownable(msg.sender) {\r\n        reactToken = IERC20(_reactToken);\r\n    }\r\n\r\n    // Users call this function to deposit ReactTokens and receive shares in return\r\n    function deposit(uint256 nftId, uint256 reactSubId, uint256 amount) external {\r\n        require(amount > 0, \"Amount must be positive\");\r\n        NFTPool storage nftPool = nftPools[nftId];\r\n        Pool storage pool = nftPool.reacts[reactSubId];\r\n        \r\n        // Calculate shares to be given for the deposit\r\n        uint256 shares = calculateShares(nftId, reactSubId, amount);\r\n        \r\n        // Transfer ReactTokens from user to contract\r\n        require(reactToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\r\n        \r\n        // Update pool and user information\r\n        pool.totalDeposited += amount;\r\n        pool.userShares[msg.sender] += shares;\r\n        pool.totalShares += shares;\r\n    }\r\n\r\n// Calculate the number of shares a deposit will receive\r\nfunction calculateShares(uint256 nftId, uint256 reactSubId, uint256 amount) public view returns (uint256) {\r\n    NFTPool storage nftPool = nftPools[nftId];\r\n    Pool storage pool = nftPool.reacts[reactSubId];\r\n    uint256 diminishingFactor = 10000; // Define a base factor for calculation to avoid floating points\r\n\r\n    if (pool.totalDeposited == 0) {\r\n        return amount * 2; // Initial multiplier for the very first deposit\r\n    }\r\n\r\n    uint256 rate = diminishingFactor - (pool.totalDeposited / diminishingFactor);\r\n    rate = rate < diminishingFactor / 2 ? diminishingFactor / 2 : rate; // Ensure the rate does not go below a certain threshold (e.g., 50% of the original rate).\r\n\r\n    // Apply the diminishing rate to the calculation. You might need to adjust the formula to fit your requirements.\r\n    return (amount * pool.totalShares * rate) / (pool.totalDeposited * diminishingFactor);\r\n}\r\n\r\n\r\n    // Users call this to withdraw their ReactTokens based on their share of the pool\r\n    function withdraw(uint256 nftId, uint256 reactSubId) external {\r\n        NFTPool storage nftPool = nftPools[nftId];\r\n        Pool storage pool = nftPool.reacts[reactSubId];\r\n        uint256 userShares = pool.userShares[msg.sender];\r\n        require(userShares > 0, \"No shares to withdraw\");\r\n\r\n        uint256 withdrawAmount = (pool.totalDeposited * userShares) / pool.totalShares;\r\n\r\n        // Update pool information\r\n        pool.totalDeposited -= withdrawAmount;\r\n        pool.totalShares -= userShares;\r\n        delete pool.userShares[msg.sender];\r\n\r\n        // Transfer ReactTokens back to user\r\n        require(reactToken.transfer(msg.sender, withdrawAmount), \"Transfer failed\");\r\n    }\r\n\r\n    // Getter functions to access private mapping data\r\n    function getPoolInfo(uint256 nftId, uint256 reactSubId) external view returns (uint256 totalShares, uint256 totalDeposited) {\r\n        NFTPool storage nftPool = nftPools[nftId];\r\n        Pool storage pool = nftPool.reacts[reactSubId];\r\n        return (pool.totalShares, pool.totalDeposited);\r\n    }\r\n\r\n    function getUserShares(uint256 nftId, uint256 reactSubId, address user) external view returns (uint256) {\r\n        NFTPool storage nftPool = nftPools[nftId];\r\n        Pool storage pool = nftPool.reacts[reactSubId];\r\n        return pool.userShares[user];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"reactsPool.sol": {
				"ReactLiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reactToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reactSubId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reactSubId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reactSubId",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDeposited",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reactSubId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reactToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reactSubId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"reactsPool.sol\":174:3966  contract ReactLiquidityPool is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"reactsPool.sol\":653:757  constructor(address _reactToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"reactsPool.sol\":694:704  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"reactsPool.sol\":737:748  _reactToken */\n  dup1\n    /* \"reactsPool.sol\":717:727  reactToken */\n  0x01\n  0x00\n    /* \"reactsPool.sol\":717:749  reactToken = IERC20(_reactToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"reactsPool.sol\":653:757  constructor(address _reactToken) Ownable(msg.sender) {... */\n  pop\n    /* \"reactsPool.sol\":174:3966  contract ReactLiquidityPool is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"reactsPool.sol\":174:3966  contract ReactLiquidityPool is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"reactsPool.sol\":174:3966  contract ReactLiquidityPool is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa466f542\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc8c85bad\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xeea04d09\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0xaeef8a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x127e2b15\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"reactsPool.sol\":850:1580  function deposit(uint256 nftId, uint256 reactSubId, uint256 amount) external {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"reactsPool.sol\":220:244  IERC20 public reactToken */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reactsPool.sol\":2639:3333  function withdraw(uint256 nftId, uint256 reactSubId) external {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reactsPool.sol\":3703:3963  function getUserShares(uint256 nftId, uint256 reactSubId, address user) external view returns (uint256) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reactsPool.sol\":3397:3695  function getPoolInfo(uint256 nftId, uint256 reactSubId) external view returns (uint256 totalShares, uint256 totalDeposited) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reactsPool.sol\":1642:2542  function calculateShares(uint256 nftId, uint256 reactSubId, uint256 amount) public view returns (uint256) {... */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"reactsPool.sol\":850:1580  function deposit(uint256 nftId, uint256 reactSubId, uint256 amount) external {... */\n    tag_16:\n        /* \"reactsPool.sol\":955:956  0 */\n      0x00\n        /* \"reactsPool.sol\":946:952  amount */\n      dup2\n        /* \"reactsPool.sol\":946:956  amount > 0 */\n      gt\n        /* \"reactsPool.sol\":938:984  require(amount > 0, \"Amount must be positive\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"reactsPool.sol\":995:1018  NFTPool storage nftPool */\n      0x00\n        /* \"reactsPool.sol\":1021:1029  nftPools */\n      0x02\n        /* \"reactsPool.sol\":1021:1036  nftPools[nftId] */\n      0x00\n        /* \"reactsPool.sol\":1030:1035  nftId */\n      dup6\n        /* \"reactsPool.sol\":1021:1036  nftPools[nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":995:1036  NFTPool storage nftPool = nftPools[nftId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1047:1064  Pool storage pool */\n      0x00\n        /* \"reactsPool.sol\":1067:1074  nftPool */\n      dup2\n        /* \"reactsPool.sol\":1067:1081  nftPool.reacts */\n      0x00\n      add\n        /* \"reactsPool.sol\":1067:1093  nftPool.reacts[reactSubId] */\n      0x00\n        /* \"reactsPool.sol\":1082:1092  reactSubId */\n      dup6\n        /* \"reactsPool.sol\":1067:1093  nftPool.reacts[reactSubId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":1047:1093  Pool storage pool = nftPool.reacts[reactSubId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1171:1185  uint256 shares */\n      0x00\n        /* \"reactsPool.sol\":1188:1230  calculateShares(nftId, reactSubId, amount) */\n      tag_54\n        /* \"reactsPool.sol\":1204:1209  nftId */\n      dup7\n        /* \"reactsPool.sol\":1211:1221  reactSubId */\n      dup7\n        /* \"reactsPool.sol\":1223:1229  amount */\n      dup7\n        /* \"reactsPool.sol\":1188:1203  calculateShares */\n      tag_44\n        /* \"reactsPool.sol\":1188:1230  calculateShares(nftId, reactSubId, amount) */\n      jump\t// in\n    tag_54:\n        /* \"reactsPool.sol\":1171:1230  uint256 shares = calculateShares(nftId, reactSubId, amount) */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1314:1324  reactToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"reactsPool.sol\":1314:1337  reactToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"reactsPool.sol\":1338:1348  msg.sender */\n      caller\n        /* \"reactsPool.sol\":1358:1362  this */\n      address\n        /* \"reactsPool.sol\":1365:1371  amount */\n      dup8\n        /* \"reactsPool.sol\":1314:1372  reactToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"reactsPool.sol\":1306:1392  require(reactToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"reactsPool.sol\":1481:1487  amount */\n      dup4\n        /* \"reactsPool.sol\":1458:1462  pool */\n      dup3\n        /* \"reactsPool.sol\":1458:1477  pool.totalDeposited */\n      0x01\n      add\n      0x00\n        /* \"reactsPool.sol\":1458:1487  pool.totalDeposited += amount */\n      dup3\n      dup3\n      sload\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reactsPool.sol\":1529:1535  shares */\n      dup1\n        /* \"reactsPool.sol\":1498:1502  pool */\n      dup3\n        /* \"reactsPool.sol\":1498:1513  pool.userShares */\n      0x02\n      add\n        /* \"reactsPool.sol\":1498:1525  pool.userShares[msg.sender] */\n      0x00\n        /* \"reactsPool.sol\":1514:1524  msg.sender */\n      caller\n        /* \"reactsPool.sol\":1498:1525  pool.userShares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"reactsPool.sol\":1498:1535  pool.userShares[msg.sender] += shares */\n      dup3\n      dup3\n      sload\n      tag_66\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reactsPool.sol\":1566:1572  shares */\n      dup1\n        /* \"reactsPool.sol\":1546:1550  pool */\n      dup3\n        /* \"reactsPool.sol\":1546:1562  pool.totalShares */\n      0x00\n      add\n      0x00\n        /* \"reactsPool.sol\":1546:1572  pool.totalShares += shares */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reactsPool.sol\":927:1580  {... */\n      pop\n      pop\n      pop\n        /* \"reactsPool.sol\":850:1580  function deposit(uint256 nftId, uint256 reactSubId, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"reactsPool.sol\":220:244  IERC20 public reactToken */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"reactsPool.sol\":2639:3333  function withdraw(uint256 nftId, uint256 reactSubId) external {... */\n    tag_24:\n        /* \"reactsPool.sol\":2712:2735  NFTPool storage nftPool */\n      0x00\n        /* \"reactsPool.sol\":2738:2746  nftPools */\n      0x02\n        /* \"reactsPool.sol\":2738:2753  nftPools[nftId] */\n      0x00\n        /* \"reactsPool.sol\":2747:2752  nftId */\n      dup5\n        /* \"reactsPool.sol\":2738:2753  nftPools[nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":2712:2753  NFTPool storage nftPool = nftPools[nftId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":2764:2781  Pool storage pool */\n      0x00\n        /* \"reactsPool.sol\":2784:2791  nftPool */\n      dup2\n        /* \"reactsPool.sol\":2784:2798  nftPool.reacts */\n      0x00\n      add\n        /* \"reactsPool.sol\":2784:2810  nftPool.reacts[reactSubId] */\n      0x00\n        /* \"reactsPool.sol\":2799:2809  reactSubId */\n      dup5\n        /* \"reactsPool.sol\":2784:2810  nftPool.reacts[reactSubId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":2764:2810  Pool storage pool = nftPool.reacts[reactSubId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":2821:2839  uint256 userShares */\n      0x00\n        /* \"reactsPool.sol\":2842:2846  pool */\n      dup2\n        /* \"reactsPool.sol\":2842:2857  pool.userShares */\n      0x02\n      add\n        /* \"reactsPool.sol\":2842:2869  pool.userShares[msg.sender] */\n      0x00\n        /* \"reactsPool.sol\":2858:2868  msg.sender */\n      caller\n        /* \"reactsPool.sol\":2842:2869  pool.userShares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reactsPool.sol\":2821:2869  uint256 userShares = pool.userShares[msg.sender] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":2901:2902  0 */\n      0x00\n        /* \"reactsPool.sol\":2888:2898  userShares */\n      dup2\n        /* \"reactsPool.sol\":2888:2902  userShares > 0 */\n      gt\n        /* \"reactsPool.sol\":2880:2928  require(userShares > 0, \"No shares to withdraw\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"reactsPool.sol\":2941:2963  uint256 withdrawAmount */\n      0x00\n        /* \"reactsPool.sol\":3003:3007  pool */\n      dup3\n        /* \"reactsPool.sol\":3003:3019  pool.totalShares */\n      0x00\n      add\n      sload\n        /* \"reactsPool.sol\":2989:2999  userShares */\n      dup3\n        /* \"reactsPool.sol\":2967:2971  pool */\n      dup5\n        /* \"reactsPool.sol\":2967:2986  pool.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"reactsPool.sol\":2967:2999  pool.totalDeposited * userShares */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"reactsPool.sol\":2966:3019  (pool.totalDeposited * userShares) / pool.totalShares */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"reactsPool.sol\":2941:3019  uint256 withdrawAmount = (pool.totalDeposited * userShares) / pool.totalShares */\n      swap1\n      pop\n        /* \"reactsPool.sol\":3091:3105  withdrawAmount */\n      dup1\n        /* \"reactsPool.sol\":3068:3072  pool */\n      dup4\n        /* \"reactsPool.sol\":3068:3087  pool.totalDeposited */\n      0x01\n      add\n      0x00\n        /* \"reactsPool.sol\":3068:3105  pool.totalDeposited -= withdrawAmount */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reactsPool.sol\":3136:3146  userShares */\n      dup2\n        /* \"reactsPool.sol\":3116:3120  pool */\n      dup4\n        /* \"reactsPool.sol\":3116:3132  pool.totalShares */\n      0x00\n      add\n      0x00\n        /* \"reactsPool.sol\":3116:3146  pool.totalShares -= userShares */\n      dup3\n      dup3\n      sload\n      tag_78\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_78:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reactsPool.sol\":3164:3168  pool */\n      dup3\n        /* \"reactsPool.sol\":3164:3179  pool.userShares */\n      0x02\n      add\n        /* \"reactsPool.sol\":3164:3191  pool.userShares[msg.sender] */\n      0x00\n        /* \"reactsPool.sol\":3180:3190  msg.sender */\n      caller\n        /* \"reactsPool.sol\":3164:3191  pool.userShares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":3157:3191  delete pool.userShares[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"reactsPool.sol\":3258:3268  reactToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"reactsPool.sol\":3258:3277  reactToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"reactsPool.sol\":3278:3288  msg.sender */\n      caller\n        /* \"reactsPool.sol\":3290:3304  withdrawAmount */\n      dup4\n        /* \"reactsPool.sol\":3258:3305  reactToken.transfer(msg.sender, withdrawAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_83:\n        /* \"reactsPool.sol\":3250:3325  require(reactToken.transfer(msg.sender, withdrawAmount), \"Transfer failed\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_63\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"reactsPool.sol\":2701:3333  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"reactsPool.sol\":2639:3333  function withdraw(uint256 nftId, uint256 reactSubId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"reactsPool.sol\":3703:3963  function getUserShares(uint256 nftId, uint256 reactSubId, address user) external view returns (uint256) {... */\n    tag_34:\n        /* \"reactsPool.sol\":3798:3805  uint256 */\n      0x00\n        /* \"reactsPool.sol\":3818:3841  NFTPool storage nftPool */\n      dup1\n        /* \"reactsPool.sol\":3844:3852  nftPools */\n      0x02\n        /* \"reactsPool.sol\":3844:3859  nftPools[nftId] */\n      0x00\n        /* \"reactsPool.sol\":3853:3858  nftId */\n      dup7\n        /* \"reactsPool.sol\":3844:3859  nftPools[nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":3818:3859  NFTPool storage nftPool = nftPools[nftId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":3870:3887  Pool storage pool */\n      0x00\n        /* \"reactsPool.sol\":3890:3897  nftPool */\n      dup2\n        /* \"reactsPool.sol\":3890:3904  nftPool.reacts */\n      0x00\n      add\n        /* \"reactsPool.sol\":3890:3916  nftPool.reacts[reactSubId] */\n      0x00\n        /* \"reactsPool.sol\":3905:3915  reactSubId */\n      dup7\n        /* \"reactsPool.sol\":3890:3916  nftPool.reacts[reactSubId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":3870:3916  Pool storage pool = nftPool.reacts[reactSubId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":3934:3938  pool */\n      dup1\n        /* \"reactsPool.sol\":3934:3949  pool.userShares */\n      0x02\n      add\n        /* \"reactsPool.sol\":3934:3955  pool.userShares[user] */\n      0x00\n        /* \"reactsPool.sol\":3950:3954  user */\n      dup6\n        /* \"reactsPool.sol\":3934:3955  pool.userShares[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reactsPool.sol\":3927:3955  return pool.userShares[user] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"reactsPool.sol\":3703:3963  function getUserShares(uint256 nftId, uint256 reactSubId, address user) external view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"reactsPool.sol\":3397:3695  function getPoolInfo(uint256 nftId, uint256 reactSubId) external view returns (uint256 totalShares, uint256 totalDeposited) {... */\n    tag_39:\n        /* \"reactsPool.sol\":3476:3495  uint256 totalShares */\n      0x00\n        /* \"reactsPool.sol\":3497:3519  uint256 totalDeposited */\n      dup1\n        /* \"reactsPool.sol\":3532:3555  NFTPool storage nftPool */\n      0x00\n        /* \"reactsPool.sol\":3558:3566  nftPools */\n      0x02\n        /* \"reactsPool.sol\":3558:3573  nftPools[nftId] */\n      0x00\n        /* \"reactsPool.sol\":3567:3572  nftId */\n      dup7\n        /* \"reactsPool.sol\":3558:3573  nftPools[nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":3532:3573  NFTPool storage nftPool = nftPools[nftId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":3584:3601  Pool storage pool */\n      0x00\n        /* \"reactsPool.sol\":3604:3611  nftPool */\n      dup2\n        /* \"reactsPool.sol\":3604:3618  nftPool.reacts */\n      0x00\n      add\n        /* \"reactsPool.sol\":3604:3630  nftPool.reacts[reactSubId] */\n      0x00\n        /* \"reactsPool.sol\":3619:3629  reactSubId */\n      dup7\n        /* \"reactsPool.sol\":3604:3630  nftPool.reacts[reactSubId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":3584:3630  Pool storage pool = nftPool.reacts[reactSubId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":3649:3653  pool */\n      dup1\n        /* \"reactsPool.sol\":3649:3665  pool.totalShares */\n      0x00\n      add\n      sload\n        /* \"reactsPool.sol\":3667:3671  pool */\n      dup2\n        /* \"reactsPool.sol\":3667:3686  pool.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"reactsPool.sol\":3641:3687  return (pool.totalShares, pool.totalDeposited) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"reactsPool.sol\":3397:3695  function getPoolInfo(uint256 nftId, uint256 reactSubId) external view returns (uint256 totalShares, uint256 totalDeposited) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"reactsPool.sol\":1642:2542  function calculateShares(uint256 nftId, uint256 reactSubId, uint256 amount) public view returns (uint256) {... */\n    tag_44:\n        /* \"reactsPool.sol\":1739:1746  uint256 */\n      0x00\n        /* \"reactsPool.sol\":1755:1778  NFTPool storage nftPool */\n      dup1\n        /* \"reactsPool.sol\":1781:1789  nftPools */\n      0x02\n        /* \"reactsPool.sol\":1781:1796  nftPools[nftId] */\n      0x00\n        /* \"reactsPool.sol\":1790:1795  nftId */\n      dup7\n        /* \"reactsPool.sol\":1781:1796  nftPools[nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":1755:1796  NFTPool storage nftPool = nftPools[nftId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1803:1820  Pool storage pool */\n      0x00\n        /* \"reactsPool.sol\":1823:1830  nftPool */\n      dup2\n        /* \"reactsPool.sol\":1823:1837  nftPool.reacts */\n      0x00\n      add\n        /* \"reactsPool.sol\":1823:1849  nftPool.reacts[reactSubId] */\n      0x00\n        /* \"reactsPool.sol\":1838:1848  reactSubId */\n      dup7\n        /* \"reactsPool.sol\":1823:1849  nftPool.reacts[reactSubId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reactsPool.sol\":1803:1849  Pool storage pool = nftPool.reacts[reactSubId] */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1856:1881  uint256 diminishingFactor */\n      0x00\n        /* \"reactsPool.sol\":1884:1889  10000 */\n      0x2710\n        /* \"reactsPool.sol\":1856:1889  uint256 diminishingFactor = 10000 */\n      swap1\n      pop\n        /* \"reactsPool.sol\":1990:1991  0 */\n      0x00\n        /* \"reactsPool.sol\":1967:1971  pool */\n      dup3\n        /* \"reactsPool.sol\":1967:1986  pool.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"reactsPool.sol\":1967:1991  pool.totalDeposited == 0 */\n      sub\n        /* \"reactsPool.sol\":1963:2078  if (pool.totalDeposited == 0) {... */\n      tag_96\n      jumpi\n        /* \"reactsPool.sol\":2020:2021  2 */\n      0x02\n        /* \"reactsPool.sol\":2011:2017  amount */\n      dup6\n        /* \"reactsPool.sol\":2011:2021  amount * 2 */\n      tag_97\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_97:\n        /* \"reactsPool.sol\":2004:2021  return amount * 2 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_95)\n        /* \"reactsPool.sol\":1963:2078  if (pool.totalDeposited == 0) {... */\n    tag_96:\n        /* \"reactsPool.sol\":2086:2098  uint256 rate */\n      0x00\n        /* \"reactsPool.sol\":2144:2161  diminishingFactor */\n      dup2\n        /* \"reactsPool.sol\":2122:2126  pool */\n      dup4\n        /* \"reactsPool.sol\":2122:2141  pool.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"reactsPool.sol\":2122:2161  pool.totalDeposited / diminishingFactor */\n      tag_98\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_98:\n        /* \"reactsPool.sol\":2101:2118  diminishingFactor */\n      dup3\n        /* \"reactsPool.sol\":2101:2162  diminishingFactor - (pool.totalDeposited / diminishingFactor) */\n      tag_99\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_99:\n        /* \"reactsPool.sol\":2086:2162  uint256 rate = diminishingFactor - (pool.totalDeposited / diminishingFactor) */\n      swap1\n      pop\n        /* \"reactsPool.sol\":2203:2204  2 */\n      0x02\n        /* \"reactsPool.sol\":2183:2200  diminishingFactor */\n      dup3\n        /* \"reactsPool.sol\":2183:2204  diminishingFactor / 2 */\n      tag_100\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_100:\n        /* \"reactsPool.sol\":2176:2180  rate */\n      dup2\n        /* \"reactsPool.sol\":2176:2204  rate < diminishingFactor / 2 */\n      lt\n        /* \"reactsPool.sol\":2176:2235  rate < diminishingFactor / 2 ? diminishingFactor / 2 : rate */\n      tag_101\n      jumpi\n        /* \"reactsPool.sol\":2231:2235  rate */\n      dup1\n        /* \"reactsPool.sol\":2176:2235  rate < diminishingFactor / 2 ? diminishingFactor / 2 : rate */\n      jump(tag_102)\n    tag_101:\n        /* \"reactsPool.sol\":2227:2228  2 */\n      0x02\n        /* \"reactsPool.sol\":2207:2224  diminishingFactor */\n      dup3\n        /* \"reactsPool.sol\":2207:2228  diminishingFactor / 2 */\n      tag_103\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_103:\n        /* \"reactsPool.sol\":2176:2235  rate < diminishingFactor / 2 ? diminishingFactor / 2 : rate */\n    tag_102:\n        /* \"reactsPool.sol\":2169:2235  rate = rate < diminishingFactor / 2 ? diminishingFactor / 2 : rate */\n      swap1\n      pop\n        /* \"reactsPool.sol\":2520:2537  diminishingFactor */\n      dup2\n        /* \"reactsPool.sol\":2498:2502  pool */\n      dup4\n        /* \"reactsPool.sol\":2498:2517  pool.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"reactsPool.sol\":2498:2537  pool.totalDeposited * diminishingFactor */\n      tag_104\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n        /* \"reactsPool.sol\":2489:2493  rate */\n      dup2\n        /* \"reactsPool.sol\":2470:2474  pool */\n      dup5\n        /* \"reactsPool.sol\":2470:2486  pool.totalShares */\n      0x00\n      add\n      sload\n        /* \"reactsPool.sol\":2461:2467  amount */\n      dup9\n        /* \"reactsPool.sol\":2461:2486  amount * pool.totalShares */\n      tag_105\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_105:\n        /* \"reactsPool.sol\":2461:2493  amount * pool.totalShares * rate */\n      tag_106\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_106:\n        /* \"reactsPool.sol\":2460:2538  (amount * pool.totalShares * rate) / (pool.totalDeposited * diminishingFactor) */\n      tag_107\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_107:\n        /* \"reactsPool.sol\":2453:2538  return (amount * pool.totalShares * rate) / (pool.totalDeposited * diminishingFactor) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"reactsPool.sol\":1642:2542  function calculateShares(uint256 nftId, uint256 reactSubId, uint256 amount) public view returns (uint256) {... */\n    tag_95:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_124:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_126:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_127:\n        /* \"#utility.yul\":490:514   */\n      tag_158\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_126\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_159:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_128:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_161\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_127\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_15:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_164\n      tag_124\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":800:919   */\n    tag_163:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_165\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_128\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_166\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_128\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_167\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_128\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1441   */\n    tag_129:\n        /* \"#utility.yul\":1352:1359   */\n      0x00\n        /* \"#utility.yul\":1392:1434   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1385:1390   */\n      dup3\n        /* \"#utility.yul\":1381:1435   */\n      and\n        /* \"#utility.yul\":1370:1435   */\n      swap1\n      pop\n        /* \"#utility.yul\":1315:1441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1507   */\n    tag_130:\n        /* \"#utility.yul\":1475:1478   */\n      0x00\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1489:1501   */\n      swap1\n      pop\n        /* \"#utility.yul\":1447:1507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1513:1655   */\n    tag_131:\n        /* \"#utility.yul\":1563:1572   */\n      0x00\n        /* \"#utility.yul\":1596:1649   */\n      tag_171\n        /* \"#utility.yul\":1614:1648   */\n      tag_172\n        /* \"#utility.yul\":1623:1647   */\n      tag_173\n        /* \"#utility.yul\":1641:1646   */\n      dup5\n        /* \"#utility.yul\":1623:1647   */\n      tag_129\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1614:1648   */\n      tag_130\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1596:1649   */\n      tag_129\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1583:1649   */\n      swap1\n      pop\n        /* \"#utility.yul\":1513:1655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1661:1787   */\n    tag_132:\n        /* \"#utility.yul\":1711:1720   */\n      0x00\n        /* \"#utility.yul\":1744:1781   */\n      tag_175\n        /* \"#utility.yul\":1775:1780   */\n      dup3\n        /* \"#utility.yul\":1744:1781   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1731:1781   */\n      swap1\n      pop\n        /* \"#utility.yul\":1661:1787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1793:1933   */\n    tag_133:\n        /* \"#utility.yul\":1857:1866   */\n      0x00\n        /* \"#utility.yul\":1890:1927   */\n      tag_177\n        /* \"#utility.yul\":1921:1926   */\n      dup3\n        /* \"#utility.yul\":1890:1927   */\n      tag_132\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1877:1927   */\n      swap1\n      pop\n        /* \"#utility.yul\":1793:1933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1939:2098   */\n    tag_134:\n        /* \"#utility.yul\":2040:2091   */\n      tag_179\n        /* \"#utility.yul\":2085:2090   */\n      dup2\n        /* \"#utility.yul\":2040:2091   */\n      tag_133\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2035:2038   */\n      dup3\n        /* \"#utility.yul\":2028:2092   */\n      mstore\n        /* \"#utility.yul\":1939:2098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2354   */\n    tag_20:\n        /* \"#utility.yul\":2211:2215   */\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2347   */\n      tag_181\n        /* \"#utility.yul\":2344:2345   */\n      0x00\n        /* \"#utility.yul\":2333:2342   */\n      dup4\n        /* \"#utility.yul\":2329:2346   */\n      add\n        /* \"#utility.yul\":2320:2326   */\n      dup5\n        /* \"#utility.yul\":2262:2347   */\n      tag_134\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2104:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2834   */\n    tag_23:\n        /* \"#utility.yul\":2428:2434   */\n      0x00\n        /* \"#utility.yul\":2436:2442   */\n      dup1\n        /* \"#utility.yul\":2485:2487   */\n      0x40\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2464:2471   */\n      dup6\n        /* \"#utility.yul\":2460:2483   */\n      sub\n        /* \"#utility.yul\":2456:2488   */\n      slt\n        /* \"#utility.yul\":2453:2572   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2491:2570   */\n      tag_184\n      tag_124\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2453:2572   */\n    tag_183:\n        /* \"#utility.yul\":2611:2612   */\n      0x00\n        /* \"#utility.yul\":2636:2689   */\n      tag_185\n        /* \"#utility.yul\":2681:2688   */\n      dup6\n        /* \"#utility.yul\":2672:2678   */\n      dup3\n        /* \"#utility.yul\":2661:2670   */\n      dup7\n        /* \"#utility.yul\":2657:2679   */\n      add\n        /* \"#utility.yul\":2636:2689   */\n      tag_128\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2626:2689   */\n      swap3\n      pop\n        /* \"#utility.yul\":2582:2699   */\n      pop\n        /* \"#utility.yul\":2738:2740   */\n      0x20\n        /* \"#utility.yul\":2764:2817   */\n      tag_186\n        /* \"#utility.yul\":2809:2816   */\n      dup6\n        /* \"#utility.yul\":2800:2806   */\n      dup3\n        /* \"#utility.yul\":2789:2798   */\n      dup7\n        /* \"#utility.yul\":2785:2807   */\n      add\n        /* \"#utility.yul\":2764:2817   */\n      tag_128\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2754:2817   */\n      swap2\n      pop\n        /* \"#utility.yul\":2709:2827   */\n      pop\n        /* \"#utility.yul\":2360:2834   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2840:2936   */\n    tag_135:\n        /* \"#utility.yul\":2877:2884   */\n      0x00\n        /* \"#utility.yul\":2906:2930   */\n      tag_188\n        /* \"#utility.yul\":2924:2929   */\n      dup3\n        /* \"#utility.yul\":2906:2930   */\n      tag_129\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2895:2930   */\n      swap1\n      pop\n        /* \"#utility.yul\":2840:2936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3060   */\n    tag_136:\n        /* \"#utility.yul\":3029:3053   */\n      tag_190\n        /* \"#utility.yul\":3047:3052   */\n      dup2\n        /* \"#utility.yul\":3029:3053   */\n      tag_135\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3024:3027   */\n      dup3\n        /* \"#utility.yul\":3017:3054   */\n      mstore\n        /* \"#utility.yul\":2942:3060   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3288   */\n    tag_30:\n        /* \"#utility.yul\":3159:3163   */\n      0x00\n        /* \"#utility.yul\":3197:3199   */\n      0x20\n        /* \"#utility.yul\":3186:3195   */\n      dup3\n        /* \"#utility.yul\":3182:3200   */\n      add\n        /* \"#utility.yul\":3174:3200   */\n      swap1\n      pop\n        /* \"#utility.yul\":3210:3281   */\n      tag_192\n        /* \"#utility.yul\":3278:3279   */\n      0x00\n        /* \"#utility.yul\":3267:3276   */\n      dup4\n        /* \"#utility.yul\":3263:3280   */\n      add\n        /* \"#utility.yul\":3254:3260   */\n      dup5\n        /* \"#utility.yul\":3210:3281   */\n      tag_136\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3066:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3416   */\n    tag_137:\n        /* \"#utility.yul\":3367:3391   */\n      tag_194\n        /* \"#utility.yul\":3385:3390   */\n      dup2\n        /* \"#utility.yul\":3367:3391   */\n      tag_135\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3360:3365   */\n      dup2\n        /* \"#utility.yul\":3357:3392   */\n      eq\n        /* \"#utility.yul\":3347:3410   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3403:3404   */\n      dup1\n        /* \"#utility.yul\":3396:3408   */\n      revert\n        /* \"#utility.yul\":3347:3410   */\n    tag_195:\n        /* \"#utility.yul\":3294:3416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3561   */\n    tag_138:\n        /* \"#utility.yul\":3468:3473   */\n      0x00\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3493:3513   */\n      calldataload\n        /* \"#utility.yul\":3484:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3555   */\n      tag_197\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3522:3555   */\n      tag_137\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3422:3561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:4186   */\n    tag_33:\n        /* \"#utility.yul\":3644:3650   */\n      0x00\n        /* \"#utility.yul\":3652:3658   */\n      dup1\n        /* \"#utility.yul\":3660:3666   */\n      0x00\n        /* \"#utility.yul\":3709:3711   */\n      0x60\n        /* \"#utility.yul\":3697:3706   */\n      dup5\n        /* \"#utility.yul\":3688:3695   */\n      dup7\n        /* \"#utility.yul\":3684:3707   */\n      sub\n        /* \"#utility.yul\":3680:3712   */\n      slt\n        /* \"#utility.yul\":3677:3796   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3715:3794   */\n      tag_200\n      tag_124\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3677:3796   */\n    tag_199:\n        /* \"#utility.yul\":3835:3836   */\n      0x00\n        /* \"#utility.yul\":3860:3913   */\n      tag_201\n        /* \"#utility.yul\":3905:3912   */\n      dup7\n        /* \"#utility.yul\":3896:3902   */\n      dup3\n        /* \"#utility.yul\":3885:3894   */\n      dup8\n        /* \"#utility.yul\":3881:3903   */\n      add\n        /* \"#utility.yul\":3860:3913   */\n      tag_128\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3850:3913   */\n      swap4\n      pop\n        /* \"#utility.yul\":3806:3923   */\n      pop\n        /* \"#utility.yul\":3962:3964   */\n      0x20\n        /* \"#utility.yul\":3988:4041   */\n      tag_202\n        /* \"#utility.yul\":4033:4040   */\n      dup7\n        /* \"#utility.yul\":4024:4030   */\n      dup3\n        /* \"#utility.yul\":4013:4022   */\n      dup8\n        /* \"#utility.yul\":4009:4031   */\n      add\n        /* \"#utility.yul\":3988:4041   */\n      tag_128\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3978:4041   */\n      swap3\n      pop\n        /* \"#utility.yul\":3933:4051   */\n      pop\n        /* \"#utility.yul\":4090:4092   */\n      0x40\n        /* \"#utility.yul\":4116:4169   */\n      tag_203\n        /* \"#utility.yul\":4161:4168   */\n      dup7\n        /* \"#utility.yul\":4152:4158   */\n      dup3\n        /* \"#utility.yul\":4141:4150   */\n      dup8\n        /* \"#utility.yul\":4137:4159   */\n      add\n        /* \"#utility.yul\":4116:4169   */\n      tag_138\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4106:4169   */\n      swap2\n      pop\n        /* \"#utility.yul\":4061:4179   */\n      pop\n        /* \"#utility.yul\":3567:4186   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4192:4310   */\n    tag_139:\n        /* \"#utility.yul\":4279:4303   */\n      tag_205\n        /* \"#utility.yul\":4297:4302   */\n      dup2\n        /* \"#utility.yul\":4279:4303   */\n      tag_126\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4274:4277   */\n      dup3\n        /* \"#utility.yul\":4267:4304   */\n      mstore\n        /* \"#utility.yul\":4192:4310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4538   */\n    tag_36:\n        /* \"#utility.yul\":4409:4413   */\n      0x00\n        /* \"#utility.yul\":4447:4449   */\n      0x20\n        /* \"#utility.yul\":4436:4445   */\n      dup3\n        /* \"#utility.yul\":4432:4450   */\n      add\n        /* \"#utility.yul\":4424:4450   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4531   */\n      tag_207\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4517:4526   */\n      dup4\n        /* \"#utility.yul\":4513:4530   */\n      add\n        /* \"#utility.yul\":4504:4510   */\n      dup5\n        /* \"#utility.yul\":4460:4531   */\n      tag_139\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4316:4538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:4876   */\n    tag_41:\n        /* \"#utility.yul\":4665:4669   */\n      0x00\n        /* \"#utility.yul\":4703:4705   */\n      0x40\n        /* \"#utility.yul\":4692:4701   */\n      dup3\n        /* \"#utility.yul\":4688:4706   */\n      add\n        /* \"#utility.yul\":4680:4706   */\n      swap1\n      pop\n        /* \"#utility.yul\":4716:4787   */\n      tag_209\n        /* \"#utility.yul\":4784:4785   */\n      0x00\n        /* \"#utility.yul\":4773:4782   */\n      dup4\n        /* \"#utility.yul\":4769:4786   */\n      add\n        /* \"#utility.yul\":4760:4766   */\n      dup6\n        /* \"#utility.yul\":4716:4787   */\n      tag_139\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4797:4869   */\n      tag_210\n        /* \"#utility.yul\":4865:4867   */\n      0x20\n        /* \"#utility.yul\":4854:4863   */\n      dup4\n        /* \"#utility.yul\":4850:4868   */\n      add\n        /* \"#utility.yul\":4841:4847   */\n      dup5\n        /* \"#utility.yul\":4797:4869   */\n      tag_139\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4544:4876   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5211   */\n    tag_48:\n        /* \"#utility.yul\":4941:4947   */\n      0x00\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4978:4987   */\n      dup3\n        /* \"#utility.yul\":4969:4976   */\n      dup5\n        /* \"#utility.yul\":4965:4988   */\n      sub\n        /* \"#utility.yul\":4961:4993   */\n      slt\n        /* \"#utility.yul\":4958:5077   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4996:5075   */\n      tag_213\n      tag_124\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4958:5077   */\n    tag_212:\n        /* \"#utility.yul\":5116:5117   */\n      0x00\n        /* \"#utility.yul\":5141:5194   */\n      tag_214\n        /* \"#utility.yul\":5186:5193   */\n      dup5\n        /* \"#utility.yul\":5177:5183   */\n      dup3\n        /* \"#utility.yul\":5166:5175   */\n      dup6\n        /* \"#utility.yul\":5162:5184   */\n      add\n        /* \"#utility.yul\":5141:5194   */\n      tag_138\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5131:5194   */\n      swap2\n      pop\n        /* \"#utility.yul\":5087:5204   */\n      pop\n        /* \"#utility.yul\":4882:5211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5217:5386   */\n    tag_140:\n        /* \"#utility.yul\":5301:5312   */\n      0x00\n        /* \"#utility.yul\":5335:5341   */\n      dup3\n        /* \"#utility.yul\":5330:5333   */\n      dup3\n        /* \"#utility.yul\":5323:5342   */\n      mstore\n        /* \"#utility.yul\":5375:5379   */\n      0x20\n        /* \"#utility.yul\":5370:5373   */\n      dup3\n        /* \"#utility.yul\":5366:5380   */\n      add\n        /* \"#utility.yul\":5351:5380   */\n      swap1\n      pop\n        /* \"#utility.yul\":5217:5386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5392:5565   */\n    tag_141:\n        /* \"#utility.yul\":5532:5557   */\n      0x416d6f756e74206d75737420626520706f736974697665000000000000000000\n        /* \"#utility.yul\":5528:5529   */\n      0x00\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5516:5530   */\n      add\n        /* \"#utility.yul\":5509:5558   */\n      mstore\n        /* \"#utility.yul\":5392:5565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5571:5937   */\n    tag_142:\n        /* \"#utility.yul\":5713:5716   */\n      0x00\n        /* \"#utility.yul\":5734:5801   */\n      tag_218\n        /* \"#utility.yul\":5798:5800   */\n      0x17\n        /* \"#utility.yul\":5793:5796   */\n      dup4\n        /* \"#utility.yul\":5734:5801   */\n      tag_140\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5727:5801   */\n      swap2\n      pop\n        /* \"#utility.yul\":5810:5903   */\n      tag_219\n        /* \"#utility.yul\":5899:5902   */\n      dup3\n        /* \"#utility.yul\":5810:5903   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5923:5926   */\n      dup3\n        /* \"#utility.yul\":5919:5931   */\n      add\n        /* \"#utility.yul\":5912:5931   */\n      swap1\n      pop\n        /* \"#utility.yul\":5571:5937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5943:6362   */\n    tag_53:\n        /* \"#utility.yul\":6109:6113   */\n      0x00\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"#utility.yul\":6136:6145   */\n      dup3\n        /* \"#utility.yul\":6132:6150   */\n      add\n        /* \"#utility.yul\":6124:6150   */\n      swap1\n      pop\n        /* \"#utility.yul\":6196:6205   */\n      dup2\n        /* \"#utility.yul\":6190:6194   */\n      dup2\n        /* \"#utility.yul\":6186:6206   */\n      sub\n        /* \"#utility.yul\":6182:6183   */\n      0x00\n        /* \"#utility.yul\":6171:6180   */\n      dup4\n        /* \"#utility.yul\":6167:6184   */\n      add\n        /* \"#utility.yul\":6160:6207   */\n      mstore\n        /* \"#utility.yul\":6224:6355   */\n      tag_221\n        /* \"#utility.yul\":6350:6354   */\n      dup2\n        /* \"#utility.yul\":6224:6355   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6216:6355   */\n      swap1\n      pop\n        /* \"#utility.yul\":5943:6362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6368:6810   */\n    tag_56:\n        /* \"#utility.yul\":6517:6521   */\n      0x00\n        /* \"#utility.yul\":6555:6557   */\n      0x60\n        /* \"#utility.yul\":6544:6553   */\n      dup3\n        /* \"#utility.yul\":6540:6558   */\n      add\n        /* \"#utility.yul\":6532:6558   */\n      swap1\n      pop\n        /* \"#utility.yul\":6568:6639   */\n      tag_223\n        /* \"#utility.yul\":6636:6637   */\n      0x00\n        /* \"#utility.yul\":6625:6634   */\n      dup4\n        /* \"#utility.yul\":6621:6638   */\n      add\n        /* \"#utility.yul\":6612:6618   */\n      dup7\n        /* \"#utility.yul\":6568:6639   */\n      tag_136\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6649:6721   */\n      tag_224\n        /* \"#utility.yul\":6717:6719   */\n      0x20\n        /* \"#utility.yul\":6706:6715   */\n      dup4\n        /* \"#utility.yul\":6702:6720   */\n      add\n        /* \"#utility.yul\":6693:6699   */\n      dup6\n        /* \"#utility.yul\":6649:6721   */\n      tag_136\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6731:6803   */\n      tag_225\n        /* \"#utility.yul\":6799:6801   */\n      0x40\n        /* \"#utility.yul\":6788:6797   */\n      dup4\n        /* \"#utility.yul\":6784:6802   */\n      add\n        /* \"#utility.yul\":6775:6781   */\n      dup5\n        /* \"#utility.yul\":6731:6803   */\n      tag_139\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6368:6810   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6906   */\n    tag_143:\n        /* \"#utility.yul\":6850:6857   */\n      0x00\n        /* \"#utility.yul\":6893:6898   */\n      dup2\n        /* \"#utility.yul\":6886:6899   */\n      iszero\n        /* \"#utility.yul\":6879:6900   */\n      iszero\n        /* \"#utility.yul\":6868:6900   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6912:7028   */\n    tag_144:\n        /* \"#utility.yul\":6982:7003   */\n      tag_228\n        /* \"#utility.yul\":6997:7002   */\n      dup2\n        /* \"#utility.yul\":6982:7003   */\n      tag_143\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6975:6980   */\n      dup2\n        /* \"#utility.yul\":6972:7004   */\n      eq\n        /* \"#utility.yul\":6962:7022   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":7018:7019   */\n      0x00\n        /* \"#utility.yul\":7015:7016   */\n      dup1\n        /* \"#utility.yul\":7008:7020   */\n      revert\n        /* \"#utility.yul\":6962:7022   */\n    tag_229:\n        /* \"#utility.yul\":6912:7028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7034:7171   */\n    tag_145:\n        /* \"#utility.yul\":7088:7093   */\n      0x00\n        /* \"#utility.yul\":7119:7125   */\n      dup2\n        /* \"#utility.yul\":7113:7126   */\n      mload\n        /* \"#utility.yul\":7104:7126   */\n      swap1\n      pop\n        /* \"#utility.yul\":7135:7165   */\n      tag_231\n        /* \"#utility.yul\":7159:7164   */\n      dup2\n        /* \"#utility.yul\":7135:7165   */\n      tag_144\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7034:7171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7177:7522   */\n    tag_60:\n        /* \"#utility.yul\":7244:7250   */\n      0x00\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7281:7290   */\n      dup3\n        /* \"#utility.yul\":7272:7279   */\n      dup5\n        /* \"#utility.yul\":7268:7291   */\n      sub\n        /* \"#utility.yul\":7264:7296   */\n      slt\n        /* \"#utility.yul\":7261:7380   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":7299:7378   */\n      tag_234\n      tag_124\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7261:7380   */\n    tag_233:\n        /* \"#utility.yul\":7419:7420   */\n      0x00\n        /* \"#utility.yul\":7444:7505   */\n      tag_235\n        /* \"#utility.yul\":7497:7504   */\n      dup5\n        /* \"#utility.yul\":7488:7494   */\n      dup3\n        /* \"#utility.yul\":7477:7486   */\n      dup6\n        /* \"#utility.yul\":7473:7495   */\n      add\n        /* \"#utility.yul\":7444:7505   */\n      tag_145\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7434:7505   */\n      swap2\n      pop\n        /* \"#utility.yul\":7390:7515   */\n      pop\n        /* \"#utility.yul\":7177:7522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7528:7693   */\n    tag_146:\n        /* \"#utility.yul\":7668:7685   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7664:7665   */\n      0x00\n        /* \"#utility.yul\":7656:7662   */\n      dup3\n        /* \"#utility.yul\":7652:7666   */\n      add\n        /* \"#utility.yul\":7645:7686   */\n      mstore\n        /* \"#utility.yul\":7528:7693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8065   */\n    tag_147:\n        /* \"#utility.yul\":7841:7844   */\n      0x00\n        /* \"#utility.yul\":7862:7929   */\n      tag_238\n        /* \"#utility.yul\":7926:7928   */\n      0x0f\n        /* \"#utility.yul\":7921:7924   */\n      dup4\n        /* \"#utility.yul\":7862:7929   */\n      tag_140\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7855:7929   */\n      swap2\n      pop\n        /* \"#utility.yul\":7938:8031   */\n      tag_239\n        /* \"#utility.yul\":8027:8030   */\n      dup3\n        /* \"#utility.yul\":7938:8031   */\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8056:8058   */\n      0x20\n        /* \"#utility.yul\":8051:8054   */\n      dup3\n        /* \"#utility.yul\":8047:8059   */\n      add\n        /* \"#utility.yul\":8040:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":7699:8065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8071:8490   */\n    tag_63:\n        /* \"#utility.yul\":8237:8241   */\n      0x00\n        /* \"#utility.yul\":8275:8277   */\n      0x20\n        /* \"#utility.yul\":8264:8273   */\n      dup3\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"#utility.yul\":8252:8278   */\n      swap1\n      pop\n        /* \"#utility.yul\":8324:8333   */\n      dup2\n        /* \"#utility.yul\":8318:8322   */\n      dup2\n        /* \"#utility.yul\":8314:8334   */\n      sub\n        /* \"#utility.yul\":8310:8311   */\n      0x00\n        /* \"#utility.yul\":8299:8308   */\n      dup4\n        /* \"#utility.yul\":8295:8312   */\n      add\n        /* \"#utility.yul\":8288:8335   */\n      mstore\n        /* \"#utility.yul\":8352:8483   */\n      tag_241\n        /* \"#utility.yul\":8478:8482   */\n      dup2\n        /* \"#utility.yul\":8352:8483   */\n      tag_147\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8344:8483   */\n      swap1\n      pop\n        /* \"#utility.yul\":8071:8490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8496:8676   */\n    tag_148:\n        /* \"#utility.yul\":8544:8621   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8541:8542   */\n      0x00\n        /* \"#utility.yul\":8534:8622   */\n      mstore\n        /* \"#utility.yul\":8641:8645   */\n      0x11\n        /* \"#utility.yul\":8638:8639   */\n      0x04\n        /* \"#utility.yul\":8631:8646   */\n      mstore\n        /* \"#utility.yul\":8665:8669   */\n      0x24\n        /* \"#utility.yul\":8662:8663   */\n      0x00\n        /* \"#utility.yul\":8655:8670   */\n      revert\n        /* \"#utility.yul\":8682:8873   */\n    tag_65:\n        /* \"#utility.yul\":8722:8725   */\n      0x00\n        /* \"#utility.yul\":8741:8761   */\n      tag_244\n        /* \"#utility.yul\":8759:8760   */\n      dup3\n        /* \"#utility.yul\":8741:8761   */\n      tag_126\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8736:8761   */\n      swap2\n      pop\n        /* \"#utility.yul\":8775:8795   */\n      tag_245\n        /* \"#utility.yul\":8793:8794   */\n      dup4\n        /* \"#utility.yul\":8775:8795   */\n      tag_126\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8770:8795   */\n      swap3\n      pop\n        /* \"#utility.yul\":8818:8819   */\n      dup3\n        /* \"#utility.yul\":8815:8816   */\n      dup3\n        /* \"#utility.yul\":8811:8820   */\n      add\n        /* \"#utility.yul\":8804:8820   */\n      swap1\n      pop\n        /* \"#utility.yul\":8839:8842   */\n      dup1\n        /* \"#utility.yul\":8836:8837   */\n      dup3\n        /* \"#utility.yul\":8833:8843   */\n      gt\n        /* \"#utility.yul\":8830:8866   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8846:8864   */\n      tag_247\n      tag_148\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8830:8866   */\n    tag_246:\n        /* \"#utility.yul\":8682:8873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9050   */\n    tag_149:\n        /* \"#utility.yul\":9019:9042   */\n      0x4e6f2073686172657320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":9015:9016   */\n      0x00\n        /* \"#utility.yul\":9007:9013   */\n      dup3\n        /* \"#utility.yul\":9003:9017   */\n      add\n        /* \"#utility.yul\":8996:9043   */\n      mstore\n        /* \"#utility.yul\":8879:9050   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9056:9422   */\n    tag_150:\n        /* \"#utility.yul\":9198:9201   */\n      0x00\n        /* \"#utility.yul\":9219:9286   */\n      tag_250\n        /* \"#utility.yul\":9283:9285   */\n      0x15\n        /* \"#utility.yul\":9278:9281   */\n      dup4\n        /* \"#utility.yul\":9219:9286   */\n      tag_140\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9212:9286   */\n      swap2\n      pop\n        /* \"#utility.yul\":9295:9388   */\n      tag_251\n        /* \"#utility.yul\":9384:9387   */\n      dup3\n        /* \"#utility.yul\":9295:9388   */\n      tag_149\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9408:9411   */\n      dup3\n        /* \"#utility.yul\":9404:9416   */\n      add\n        /* \"#utility.yul\":9397:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9056:9422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9428:9847   */\n    tag_71:\n        /* \"#utility.yul\":9594:9598   */\n      0x00\n        /* \"#utility.yul\":9632:9634   */\n      0x20\n        /* \"#utility.yul\":9621:9630   */\n      dup3\n        /* \"#utility.yul\":9617:9635   */\n      add\n        /* \"#utility.yul\":9609:9635   */\n      swap1\n      pop\n        /* \"#utility.yul\":9681:9690   */\n      dup2\n        /* \"#utility.yul\":9675:9679   */\n      dup2\n        /* \"#utility.yul\":9671:9691   */\n      sub\n        /* \"#utility.yul\":9667:9668   */\n      0x00\n        /* \"#utility.yul\":9656:9665   */\n      dup4\n        /* \"#utility.yul\":9652:9669   */\n      add\n        /* \"#utility.yul\":9645:9692   */\n      mstore\n        /* \"#utility.yul\":9709:9840   */\n      tag_253\n        /* \"#utility.yul\":9835:9839   */\n      dup2\n        /* \"#utility.yul\":9709:9840   */\n      tag_150\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9701:9840   */\n      swap1\n      pop\n        /* \"#utility.yul\":9428:9847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9853:10263   */\n    tag_73:\n        /* \"#utility.yul\":9893:9900   */\n      0x00\n        /* \"#utility.yul\":9916:9936   */\n      tag_255\n        /* \"#utility.yul\":9934:9935   */\n      dup3\n        /* \"#utility.yul\":9916:9936   */\n      tag_126\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9911:9936   */\n      swap2\n      pop\n        /* \"#utility.yul\":9950:9970   */\n      tag_256\n        /* \"#utility.yul\":9968:9969   */\n      dup4\n        /* \"#utility.yul\":9950:9970   */\n      tag_126\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9945:9970   */\n      swap3\n      pop\n        /* \"#utility.yul\":10005:10006   */\n      dup3\n        /* \"#utility.yul\":10002:10003   */\n      dup3\n        /* \"#utility.yul\":9998:10007   */\n      mul\n        /* \"#utility.yul\":10027:10057   */\n      tag_257\n        /* \"#utility.yul\":10045:10056   */\n      dup2\n        /* \"#utility.yul\":10027:10057   */\n      tag_126\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10016:10057   */\n      swap2\n      pop\n        /* \"#utility.yul\":10206:10207   */\n      dup3\n        /* \"#utility.yul\":10197:10204   */\n      dup3\n        /* \"#utility.yul\":10193:10208   */\n      div\n        /* \"#utility.yul\":10190:10191   */\n      dup5\n        /* \"#utility.yul\":10187:10209   */\n      eq\n        /* \"#utility.yul\":10167:10168   */\n      dup4\n        /* \"#utility.yul\":10160:10169   */\n      iszero\n        /* \"#utility.yul\":10140:10223   */\n      or\n        /* \"#utility.yul\":10117:10256   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":10236:10254   */\n      tag_259\n      tag_148\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10117:10256   */\n    tag_258:\n        /* \"#utility.yul\":9901:10263   */\n      pop\n        /* \"#utility.yul\":9853:10263   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10269:10449   */\n    tag_151:\n        /* \"#utility.yul\":10317:10394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10314:10315   */\n      0x00\n        /* \"#utility.yul\":10307:10395   */\n      mstore\n        /* \"#utility.yul\":10414:10418   */\n      0x12\n        /* \"#utility.yul\":10411:10412   */\n      0x04\n        /* \"#utility.yul\":10404:10419   */\n      mstore\n        /* \"#utility.yul\":10438:10442   */\n      0x24\n        /* \"#utility.yul\":10435:10436   */\n      0x00\n        /* \"#utility.yul\":10428:10443   */\n      revert\n        /* \"#utility.yul\":10455:10640   */\n    tag_75:\n        /* \"#utility.yul\":10495:10496   */\n      0x00\n        /* \"#utility.yul\":10512:10532   */\n      tag_262\n        /* \"#utility.yul\":10530:10531   */\n      dup3\n        /* \"#utility.yul\":10512:10532   */\n      tag_126\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10507:10532   */\n      swap2\n      pop\n        /* \"#utility.yul\":10546:10566   */\n      tag_263\n        /* \"#utility.yul\":10564:10565   */\n      dup4\n        /* \"#utility.yul\":10546:10566   */\n      tag_126\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10541:10566   */\n      swap3\n      pop\n        /* \"#utility.yul\":10585:10586   */\n      dup3\n        /* \"#utility.yul\":10575:10610   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":10590:10608   */\n      tag_265\n      tag_151\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10575:10610   */\n    tag_264:\n        /* \"#utility.yul\":10632:10633   */\n      dup3\n        /* \"#utility.yul\":10629:10630   */\n      dup3\n        /* \"#utility.yul\":10625:10634   */\n      div\n        /* \"#utility.yul\":10620:10634   */\n      swap1\n      pop\n        /* \"#utility.yul\":10455:10640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10646:10840   */\n    tag_77:\n        /* \"#utility.yul\":10686:10690   */\n      0x00\n        /* \"#utility.yul\":10706:10726   */\n      tag_267\n        /* \"#utility.yul\":10724:10725   */\n      dup3\n        /* \"#utility.yul\":10706:10726   */\n      tag_126\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10701:10726   */\n      swap2\n      pop\n        /* \"#utility.yul\":10740:10760   */\n      tag_268\n        /* \"#utility.yul\":10758:10759   */\n      dup4\n        /* \"#utility.yul\":10740:10760   */\n      tag_126\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10735:10760   */\n      swap3\n      pop\n        /* \"#utility.yul\":10784:10785   */\n      dup3\n        /* \"#utility.yul\":10781:10782   */\n      dup3\n        /* \"#utility.yul\":10777:10786   */\n      sub\n        /* \"#utility.yul\":10769:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10808:10809   */\n      dup2\n        /* \"#utility.yul\":10802:10806   */\n      dup2\n        /* \"#utility.yul\":10799:10810   */\n      gt\n        /* \"#utility.yul\":10796:10833   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":10813:10831   */\n      tag_270\n      tag_148\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10796:10833   */\n    tag_269:\n        /* \"#utility.yul\":10646:10840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:11178   */\n    tag_80:\n        /* \"#utility.yul\":10967:10971   */\n      0x00\n        /* \"#utility.yul\":11005:11007   */\n      0x40\n        /* \"#utility.yul\":10994:11003   */\n      dup3\n        /* \"#utility.yul\":10990:11008   */\n      add\n        /* \"#utility.yul\":10982:11008   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11089   */\n      tag_272\n        /* \"#utility.yul\":11086:11087   */\n      0x00\n        /* \"#utility.yul\":11075:11084   */\n      dup4\n        /* \"#utility.yul\":11071:11088   */\n      add\n        /* \"#utility.yul\":11062:11068   */\n      dup6\n        /* \"#utility.yul\":11018:11089   */\n      tag_136\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11099:11171   */\n      tag_273\n        /* \"#utility.yul\":11167:11169   */\n      0x20\n        /* \"#utility.yul\":11156:11165   */\n      dup4\n        /* \"#utility.yul\":11152:11170   */\n      add\n        /* \"#utility.yul\":11143:11149   */\n      dup5\n        /* \"#utility.yul\":11099:11171   */\n      tag_139\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10846:11178   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122024dd28e3f5d0230880aaa50f3b3d02d56a3f2a84a28eae46870e6165468a813664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 263,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:4",
										"nodeType": "YulBlock",
										"src": "0:1551:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620012b4380380620012b4833981810160405281019062000037919062000235565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000278565b60405180910390fd5b620000be816200010760201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000295565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fd82620001d0565b9050919050565b6200020f81620001f0565b81146200021b57600080fd5b50565b6000815190506200022f8162000204565b92915050565b6000602082840312156200024e576200024d620001cb565b5b60006200025e848285016200021e565b91505092915050565b6200027281620001f0565b82525050565b60006020820190506200028f600083018462000267565b92915050565b61100f80620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80638da5cb5b116100665780638da5cb5b146100f7578063a466f54214610115578063c8c85bad14610145578063eea04d0914610176578063f2fde38b146101a657610092565b8062aeef8a14610097578063127e2b15146100b3578063441a3e70146100d1578063715018a6146100ed575b600080fd5b6100b160048036038101906100ac9190610a1e565b6101c2565b005b6100bb6103bb565b6040516100c89190610af0565b60405180910390f35b6100eb60048036038101906100e69190610b0b565b6103e1565b005b6100f561061f565b005b6100ff610633565b60405161010c9190610b6c565b60405180910390f35b61012f600480360381019061012a9190610bb3565b61065c565b60405161013c9190610c15565b60405180910390f35b61015f600480360381019061015a9190610b0b565b6106da565b60405161016d929190610c30565b60405180910390f35b610190600480360381019061018b9190610a1e565b610724565b60405161019d9190610c15565b60405180910390f35b6101c060048036038101906101bb9190610c59565b61080a565b005b60008111610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc90610ce3565b60405180910390fd5b6000600260008581526020019081526020016000209050600081600001600085815260200190815260200160002090506000610242868686610724565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016102a393929190610d03565b6020604051808303816000875af11580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610d72565b610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610deb565b60405180910390fd5b838260010160008282546103399190610e3a565b92505081905550808260020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103919190610e3a565b92505081905550808260000160008282546103ac9190610e3a565b92505081905550505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600084815260200190815260200160002090506000816000016000848152602001908152602001600020905060008160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049190610eba565b60405180910390fd5b600082600001548284600101546104b19190610eda565b6104bb9190610f4b565b9050808360010160008282546104d19190610f7c565b92505081905550818360000160008282546104ec9190610f7c565b925050819055508260020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610595929190610fb0565b6020604051808303816000875af11580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610d72565b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610deb565b60405180910390fd5b505050505050565b610627610890565b6106316000610917565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600260008681526020019081526020016000209050600081600001600086815260200190815260200160002090508060020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925050509392505050565b600080600060026000868152602001908152602001600020905060008160000160008681526020019081526020016000209050806000015481600101549350935050509250929050565b6000806002600086815260200190815260200160002090506000816000016000868152602001908152602001600020905060006127109050600082600101540361077f576002856107759190610eda565b9350505050610803565b60008183600101546107919190610f4b565b8261079c9190610f7c565b90506002826107ab9190610f4b565b81106107b757806107c5565b6002826107c49190610f4b565b5b90508183600101546107d79190610eda565b818460000154886107e89190610eda565b6107f29190610eda565b6107fc9190610f4b565b9450505050505b9392505050565b610812610890565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161087b9190610b6c565b60405180910390fd5b61088d81610917565b50565b6108986109db565b73ffffffffffffffffffffffffffffffffffffffff166108b6610633565b73ffffffffffffffffffffffffffffffffffffffff1614610915576108d96109db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161090c9190610b6c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6109fb816109e8565b8114610a0657600080fd5b50565b600081359050610a18816109f2565b92915050565b600080600060608486031215610a3757610a366109e3565b5b6000610a4586828701610a09565b9350506020610a5686828701610a09565b9250506040610a6786828701610a09565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ab6610ab1610aac84610a71565b610a91565b610a71565b9050919050565b6000610ac882610a9b565b9050919050565b6000610ada82610abd565b9050919050565b610aea81610acf565b82525050565b6000602082019050610b056000830184610ae1565b92915050565b60008060408385031215610b2257610b216109e3565b5b6000610b3085828601610a09565b9250506020610b4185828601610a09565b9150509250929050565b6000610b5682610a71565b9050919050565b610b6681610b4b565b82525050565b6000602082019050610b816000830184610b5d565b92915050565b610b9081610b4b565b8114610b9b57600080fd5b50565b600081359050610bad81610b87565b92915050565b600080600060608486031215610bcc57610bcb6109e3565b5b6000610bda86828701610a09565b9350506020610beb86828701610a09565b9250506040610bfc86828701610b9e565b9150509250925092565b610c0f816109e8565b82525050565b6000602082019050610c2a6000830184610c06565b92915050565b6000604082019050610c456000830185610c06565b610c526020830184610c06565b9392505050565b600060208284031215610c6f57610c6e6109e3565b5b6000610c7d84828501610b9e565b91505092915050565b600082825260208201905092915050565b7f416d6f756e74206d75737420626520706f736974697665000000000000000000600082015250565b6000610ccd601783610c86565b9150610cd882610c97565b602082019050919050565b60006020820190508181036000830152610cfc81610cc0565b9050919050565b6000606082019050610d186000830186610b5d565b610d256020830185610b5d565b610d326040830184610c06565b949350505050565b60008115159050919050565b610d4f81610d3a565b8114610d5a57600080fd5b50565b600081519050610d6c81610d46565b92915050565b600060208284031215610d8857610d876109e3565b5b6000610d9684828501610d5d565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610dd5600f83610c86565b9150610de082610d9f565b602082019050919050565b60006020820190508181036000830152610e0481610dc8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e45826109e8565b9150610e50836109e8565b9250828201905080821115610e6857610e67610e0b565b5b92915050565b7f4e6f2073686172657320746f2077697468647261770000000000000000000000600082015250565b6000610ea4601583610c86565b9150610eaf82610e6e565b602082019050919050565b60006020820190508181036000830152610ed381610e97565b9050919050565b6000610ee5826109e8565b9150610ef0836109e8565b9250828202610efe816109e8565b91508282048414831517610f1557610f14610e0b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f56826109e8565b9150610f61836109e8565b925082610f7157610f70610f1c565b5b828204905092915050565b6000610f87826109e8565b9150610f92836109e8565b9250828203905081811115610faa57610fa9610e0b565b5b92915050565b6000604082019050610fc56000830185610b5d565b610fd26020830184610c06565b939250505056fea264697066735822122024dd28e3f5d0230880aaa50f3b3d02d56a3f2a84a28eae46870e6165468a813664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12B4 CODESIZE SUB DUP1 PUSH3 0x12B4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x235 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x295 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FD DUP3 PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH3 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x22F DUP2 PUSH3 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x24E JUMPI PUSH3 0x24D PUSH3 0x1CB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x25E DUP5 DUP3 DUP6 ADD PUSH3 0x21E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x272 DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x28F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100F DUP1 PUSH3 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA466F542 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xC8C85BAD EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xEEA04D09 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH3 0xAEEF8A EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x127E2B15 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP3 SWAP2 SWAP1 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x242 DUP7 DUP7 DUP7 PUSH2 0x724 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP3 SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x627 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x631 PUSH1 0x0 PUSH2 0x917 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x2710 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x77F JUMPI PUSH1 0x2 DUP6 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP3 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP2 LT PUSH2 0x7B7 JUMPI DUP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST DUP2 DUP5 PUSH1 0x0 ADD SLOAD DUP9 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x812 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x884 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88D DUP2 PUSH2 0x917 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x898 PUSH2 0x9DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B6 PUSH2 0x633 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x915 JUMPI PUSH2 0x8D9 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP2 EQ PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA18 DUP2 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA36 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA45 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA56 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA67 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH2 0xAB1 PUSH2 0xAAC DUP5 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0xA9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP6 DUP3 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB41 DUP6 DUP3 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xB4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xB4B JUMP JUMPDEST DUP2 EQ PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAD DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDA DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBEB DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBFC DUP7 DUP3 DUP8 ADD PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xC0F DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC45 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xC52 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xC6E PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC7D DUP5 DUP3 DUP6 ADD PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD PUSH1 0x17 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD8 DUP3 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFC DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD18 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xD25 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xD32 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4F DUP2 PUSH2 0xD3A JUMP JUMPDEST DUP2 EQ PUSH2 0xD5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6C DUP2 PUSH2 0xD46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD96 DUP5 DUP3 DUP6 ADD PUSH2 0xD5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 PUSH1 0xF DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE04 DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE45 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE50 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE67 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073686172657320746F2077697468647261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA4 PUSH1 0x15 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAF DUP3 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED3 DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE5 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF0 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEFE DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF15 JUMPI PUSH2 0xF14 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF56 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF61 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF71 JUMPI PUSH2 0xF70 PUSH2 0xF1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF92 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xFD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xDD 0x28 0xE3 CREATE2 0xD0 0x23 ADDMOD DUP1 0xAA 0xA5 0xF EXTCODESIZE RETURNDATASIZE MUL 0xD5 PUSH11 0x3F2A84A28EAE46870E6165 CHAINID DUP11 DUP2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "174:3792:3:-:0;;;653:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;694:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;737:11:3::1;717:10;;:32;;;;;;;;;;;;;;;;;;653:104:::0;174:3792;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;174:3792:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2192,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 2523,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2327,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateShares_453": {
									"entryPoint": 1828,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@deposit_375": {
									"entryPoint": 450,
									"id": 375,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getPoolInfo_564": {
									"entryPoint": 1754,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@getUserShares_596": {
									"entryPoint": 1628,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1587,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reactToken_264": {
									"entryPoint": 955,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1567,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2058,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_531": {
									"entryPoint": 993,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11181:4",
										"nodeType": "YulBlock",
										"src": "0:11181:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "597:87:4",
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nativeSrc": "607:29:4",
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nativeSrc": "616:20:4",
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nativeSrc": "645:33:4",
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nativeSrc": "645:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:4",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:4",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:4",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nativeSrc": "790:519:4",
													"nodeType": "YulBlock",
													"src": "790:519:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:4",
																"nodeType": "YulBlock",
																"src": "836:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:4"
																			},
																			"nativeSrc": "838:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:4"
																		},
																		"nativeSrc": "838:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:4"
																		},
																		"nativeSrc": "807:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:4",
																		"nodeType": "YulLiteral",
																		"src": "832:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:4"
																},
																"nativeSrc": "803:32:4",
																"nodeType": "YulFunctionCall",
																"src": "803:32:4"
															},
															"nativeSrc": "800:119:4",
															"nodeType": "YulIf",
															"src": "800:119:4"
														},
														{
															"nativeSrc": "929:117:4",
															"nodeType": "YulBlock",
															"src": "929:117:4",
															"statements": [
																{
																	"nativeSrc": "944:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:4",
																		"nodeType": "YulLiteral",
																		"src": "958:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:4",
																			"nodeType": "YulTypedName",
																			"src": "948:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:4",
																	"nodeType": "YulAssignment",
																	"src": "973:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:4"
																				},
																				"nativeSrc": "1004:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:4"
																		},
																		"nativeSrc": "983:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:4",
															"nodeType": "YulBlock",
															"src": "1056:118:4",
															"statements": [
																{
																	"nativeSrc": "1071:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:4"
																				},
																				"nativeSrc": "1132:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:4"
																		},
																		"nativeSrc": "1111:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:4",
															"nodeType": "YulBlock",
															"src": "1184:118:4",
															"statements": [
																{
																	"nativeSrc": "1199:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:4"
																				},
																				"nativeSrc": "1260:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:4"
																		},
																		"nativeSrc": "1239:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:4",
														"nodeType": "YulTypedName",
														"src": "744:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:4",
														"nodeType": "YulTypedName",
														"src": "755:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:4",
														"nodeType": "YulTypedName",
														"src": "767:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:4",
														"nodeType": "YulTypedName",
														"src": "775:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:4",
														"nodeType": "YulTypedName",
														"src": "783:6:4",
														"type": ""
													}
												],
												"src": "690:619:4"
											},
											{
												"body": {
													"nativeSrc": "1360:81:4",
													"nodeType": "YulBlock",
													"src": "1360:81:4",
													"statements": [
														{
															"nativeSrc": "1370:65:4",
															"nodeType": "YulAssignment",
															"src": "1370:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1385:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1385:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1392:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1381:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1381:3:4"
																},
																"nativeSrc": "1381:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1381:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1370:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1370:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1315:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1342:5:4",
														"nodeType": "YulTypedName",
														"src": "1342:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1352:7:4",
														"nodeType": "YulTypedName",
														"src": "1352:7:4",
														"type": ""
													}
												],
												"src": "1315:126:4"
											},
											{
												"body": {
													"nativeSrc": "1479:28:4",
													"nodeType": "YulBlock",
													"src": "1479:28:4",
													"statements": [
														{
															"nativeSrc": "1489:12:4",
															"nodeType": "YulAssignment",
															"src": "1489:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "1496:5:4",
																"nodeType": "YulIdentifier",
																"src": "1496:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1489:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1447:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1465:5:4",
														"nodeType": "YulTypedName",
														"src": "1465:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1475:3:4",
														"nodeType": "YulTypedName",
														"src": "1475:3:4",
														"type": ""
													}
												],
												"src": "1447:60:4"
											},
											{
												"body": {
													"nativeSrc": "1573:82:4",
													"nodeType": "YulBlock",
													"src": "1573:82:4",
													"statements": [
														{
															"nativeSrc": "1583:66:4",
															"nodeType": "YulAssignment",
															"src": "1583:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1641:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1641:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1623:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1623:17:4"
																				},
																				"nativeSrc": "1623:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1623:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1614:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "1614:8:4"
																		},
																		"nativeSrc": "1614:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1614:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1596:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1596:17:4"
																},
																"nativeSrc": "1596:53:4",
																"nodeType": "YulFunctionCall",
																"src": "1596:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1583:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1583:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1513:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1553:5:4",
														"nodeType": "YulTypedName",
														"src": "1553:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1563:9:4",
														"nodeType": "YulTypedName",
														"src": "1563:9:4",
														"type": ""
													}
												],
												"src": "1513:142:4"
											},
											{
												"body": {
													"nativeSrc": "1721:66:4",
													"nodeType": "YulBlock",
													"src": "1721:66:4",
													"statements": [
														{
															"nativeSrc": "1731:50:4",
															"nodeType": "YulAssignment",
															"src": "1731:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1775:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1775:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1744:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1744:30:4"
																},
																"nativeSrc": "1744:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1744:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1731:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1731:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1661:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:4",
														"nodeType": "YulTypedName",
														"src": "1701:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1711:9:4",
														"nodeType": "YulTypedName",
														"src": "1711:9:4",
														"type": ""
													}
												],
												"src": "1661:126:4"
											},
											{
												"body": {
													"nativeSrc": "1867:66:4",
													"nodeType": "YulBlock",
													"src": "1867:66:4",
													"statements": [
														{
															"nativeSrc": "1877:50:4",
															"nodeType": "YulAssignment",
															"src": "1877:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1921:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1921:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1890:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1890:30:4"
																},
																"nativeSrc": "1890:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1890:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1877:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1877:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "1793:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1847:5:4",
														"nodeType": "YulTypedName",
														"src": "1847:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1857:9:4",
														"nodeType": "YulTypedName",
														"src": "1857:9:4",
														"type": ""
													}
												],
												"src": "1793:140:4"
											},
											{
												"body": {
													"nativeSrc": "2018:80:4",
													"nodeType": "YulBlock",
													"src": "2018:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2035:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2035:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2085:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2085:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "2040:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "2040:44:4"
																		},
																		"nativeSrc": "2040:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2040:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2028:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:4"
																},
																"nativeSrc": "2028:64:4",
																"nodeType": "YulFunctionCall",
																"src": "2028:64:4"
															},
															"nativeSrc": "2028:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "2028:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "1939:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2006:5:4",
														"nodeType": "YulTypedName",
														"src": "2006:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2013:3:4",
														"nodeType": "YulTypedName",
														"src": "2013:3:4",
														"type": ""
													}
												],
												"src": "1939:159:4"
											},
											{
												"body": {
													"nativeSrc": "2216:138:4",
													"nodeType": "YulBlock",
													"src": "2216:138:4",
													"statements": [
														{
															"nativeSrc": "2226:26:4",
															"nodeType": "YulAssignment",
															"src": "2226:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:4"
																},
																"nativeSrc": "2234:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2320:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2333:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2333:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2344:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2344:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2329:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2329:3:4"
																		},
																		"nativeSrc": "2329:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "2262:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "2262:57:4"
																},
																"nativeSrc": "2262:85:4",
																"nodeType": "YulFunctionCall",
																"src": "2262:85:4"
															},
															"nativeSrc": "2262:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "2262:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "2104:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:4",
														"nodeType": "YulTypedName",
														"src": "2188:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2200:6:4",
														"nodeType": "YulTypedName",
														"src": "2200:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2211:4:4",
														"nodeType": "YulTypedName",
														"src": "2211:4:4",
														"type": ""
													}
												],
												"src": "2104:250:4"
											},
											{
												"body": {
													"nativeSrc": "2443:391:4",
													"nodeType": "YulBlock",
													"src": "2443:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2489:83:4",
																"nodeType": "YulBlock",
																"src": "2489:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2491:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2491:77:4"
																			},
																			"nativeSrc": "2491:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2491:79:4"
																		},
																		"nativeSrc": "2491:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2491:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2464:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2464:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2473:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2460:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2460:3:4"
																		},
																		"nativeSrc": "2460:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2460:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2485:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2485:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2456:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2456:3:4"
																},
																"nativeSrc": "2456:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2456:32:4"
															},
															"nativeSrc": "2453:119:4",
															"nodeType": "YulIf",
															"src": "2453:119:4"
														},
														{
															"nativeSrc": "2582:117:4",
															"nodeType": "YulBlock",
															"src": "2582:117:4",
															"statements": [
																{
																	"nativeSrc": "2597:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2597:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2611:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2611:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2601:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2601:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2626:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2626:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2661:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2661:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2672:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2672:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2657:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2657:3:4"
																				},
																				"nativeSrc": "2657:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2657:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2681:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2681:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2636:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2636:20:4"
																		},
																		"nativeSrc": "2636:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2626:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2626:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2709:118:4",
															"nodeType": "YulBlock",
															"src": "2709:118:4",
															"statements": [
																{
																	"nativeSrc": "2724:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2724:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2738:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2738:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2728:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2728:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2754:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2754:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2789:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2789:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2800:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2800:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2785:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2785:3:4"
																				},
																				"nativeSrc": "2785:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2785:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2809:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2809:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2764:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2764:20:4"
																		},
																		"nativeSrc": "2764:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2754:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2754:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2360:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2405:9:4",
														"nodeType": "YulTypedName",
														"src": "2405:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2416:7:4",
														"nodeType": "YulTypedName",
														"src": "2416:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2428:6:4",
														"nodeType": "YulTypedName",
														"src": "2428:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2436:6:4",
														"nodeType": "YulTypedName",
														"src": "2436:6:4",
														"type": ""
													}
												],
												"src": "2360:474:4"
											},
											{
												"body": {
													"nativeSrc": "2885:51:4",
													"nodeType": "YulBlock",
													"src": "2885:51:4",
													"statements": [
														{
															"nativeSrc": "2895:35:4",
															"nodeType": "YulAssignment",
															"src": "2895:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2924:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2924:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2906:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2906:17:4"
																},
																"nativeSrc": "2906:24:4",
																"nodeType": "YulFunctionCall",
																"src": "2906:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2895:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2895:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2840:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2867:5:4",
														"nodeType": "YulTypedName",
														"src": "2867:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2877:7:4",
														"nodeType": "YulTypedName",
														"src": "2877:7:4",
														"type": ""
													}
												],
												"src": "2840:96:4"
											},
											{
												"body": {
													"nativeSrc": "3007:53:4",
													"nodeType": "YulBlock",
													"src": "3007:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3024:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3047:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3047:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3029:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3029:17:4"
																		},
																		"nativeSrc": "3029:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3029:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3017:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3017:6:4"
																},
																"nativeSrc": "3017:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3017:37:4"
															},
															"nativeSrc": "3017:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3017:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2942:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2995:5:4",
														"nodeType": "YulTypedName",
														"src": "2995:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3002:3:4",
														"nodeType": "YulTypedName",
														"src": "3002:3:4",
														"type": ""
													}
												],
												"src": "2942:118:4"
											},
											{
												"body": {
													"nativeSrc": "3164:124:4",
													"nodeType": "YulBlock",
													"src": "3164:124:4",
													"statements": [
														{
															"nativeSrc": "3174:26:4",
															"nodeType": "YulAssignment",
															"src": "3174:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3186:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3197:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3182:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:4"
																},
																"nativeSrc": "3182:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3182:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3174:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3254:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3254:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3267:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3278:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3278:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3263:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:4"
																		},
																		"nativeSrc": "3263:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3263:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3210:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3210:43:4"
																},
																"nativeSrc": "3210:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3210:71:4"
															},
															"nativeSrc": "3210:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3210:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3066:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3136:9:4",
														"nodeType": "YulTypedName",
														"src": "3136:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3148:6:4",
														"nodeType": "YulTypedName",
														"src": "3148:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3159:4:4",
														"nodeType": "YulTypedName",
														"src": "3159:4:4",
														"type": ""
													}
												],
												"src": "3066:222:4"
											},
											{
												"body": {
													"nativeSrc": "3337:79:4",
													"nodeType": "YulBlock",
													"src": "3337:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3394:16:4",
																"nodeType": "YulBlock",
																"src": "3394:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3403:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3403:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3406:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3406:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3396:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:4"
																			},
																			"nativeSrc": "3396:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3396:12:4"
																		},
																		"nativeSrc": "3396:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3396:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3360:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3360:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3385:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3385:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3367:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3367:17:4"
																				},
																				"nativeSrc": "3367:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3367:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3357:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3357:2:4"
																		},
																		"nativeSrc": "3357:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3350:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:4"
																},
																"nativeSrc": "3350:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3350:43:4"
															},
															"nativeSrc": "3347:63:4",
															"nodeType": "YulIf",
															"src": "3347:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3294:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3330:5:4",
														"nodeType": "YulTypedName",
														"src": "3330:5:4",
														"type": ""
													}
												],
												"src": "3294:122:4"
											},
											{
												"body": {
													"nativeSrc": "3474:87:4",
													"nodeType": "YulBlock",
													"src": "3474:87:4",
													"statements": [
														{
															"nativeSrc": "3484:29:4",
															"nodeType": "YulAssignment",
															"src": "3484:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3506:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3493:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:4"
																},
																"nativeSrc": "3493:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3493:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3484:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3484:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3549:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3549:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3522:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3522:26:4"
																},
																"nativeSrc": "3522:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3522:33:4"
															},
															"nativeSrc": "3522:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3522:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3422:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3452:6:4",
														"nodeType": "YulTypedName",
														"src": "3452:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3460:3:4",
														"nodeType": "YulTypedName",
														"src": "3460:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3468:5:4",
														"nodeType": "YulTypedName",
														"src": "3468:5:4",
														"type": ""
													}
												],
												"src": "3422:139:4"
											},
											{
												"body": {
													"nativeSrc": "3667:519:4",
													"nodeType": "YulBlock",
													"src": "3667:519:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3713:83:4",
																"nodeType": "YulBlock",
																"src": "3713:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3715:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3715:77:4"
																			},
																			"nativeSrc": "3715:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3715:79:4"
																		},
																		"nativeSrc": "3715:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3715:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3688:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3688:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3697:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3684:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3684:3:4"
																		},
																		"nativeSrc": "3684:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3684:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3709:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3709:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3680:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:4"
																},
																"nativeSrc": "3680:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3680:32:4"
															},
															"nativeSrc": "3677:119:4",
															"nodeType": "YulIf",
															"src": "3677:119:4"
														},
														{
															"nativeSrc": "3806:117:4",
															"nodeType": "YulBlock",
															"src": "3806:117:4",
															"statements": [
																{
																	"nativeSrc": "3821:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3821:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3835:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3835:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3825:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3825:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3850:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3850:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3885:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3885:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3896:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3896:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3881:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3881:3:4"
																				},
																				"nativeSrc": "3881:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3881:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3905:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3905:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3860:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3860:20:4"
																		},
																		"nativeSrc": "3860:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3850:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3933:118:4",
															"nodeType": "YulBlock",
															"src": "3933:118:4",
															"statements": [
																{
																	"nativeSrc": "3948:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3948:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3962:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3962:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3952:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3952:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3978:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3978:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4013:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4013:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4024:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4024:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4009:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4009:3:4"
																				},
																				"nativeSrc": "4009:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4009:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4033:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4033:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3988:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3988:20:4"
																		},
																		"nativeSrc": "3988:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3988:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3978:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3978:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4061:118:4",
															"nodeType": "YulBlock",
															"src": "4061:118:4",
															"statements": [
																{
																	"nativeSrc": "4076:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4076:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4090:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4106:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4106:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4141:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4141:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4152:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4152:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4137:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4137:3:4"
																				},
																				"nativeSrc": "4137:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4137:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4161:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4161:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4116:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4116:20:4"
																		},
																		"nativeSrc": "4116:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4116:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4106:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4106:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nativeSrc": "3567:619:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3621:9:4",
														"nodeType": "YulTypedName",
														"src": "3621:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3632:7:4",
														"nodeType": "YulTypedName",
														"src": "3632:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3644:6:4",
														"nodeType": "YulTypedName",
														"src": "3644:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3652:6:4",
														"nodeType": "YulTypedName",
														"src": "3652:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3660:6:4",
														"nodeType": "YulTypedName",
														"src": "3660:6:4",
														"type": ""
													}
												],
												"src": "3567:619:4"
											},
											{
												"body": {
													"nativeSrc": "4257:53:4",
													"nodeType": "YulBlock",
													"src": "4257:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4274:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4274:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4297:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4297:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4279:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "4279:17:4"
																		},
																		"nativeSrc": "4279:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4267:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:4"
																},
																"nativeSrc": "4267:37:4",
																"nodeType": "YulFunctionCall",
																"src": "4267:37:4"
															},
															"nativeSrc": "4267:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "4267:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4192:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4245:5:4",
														"nodeType": "YulTypedName",
														"src": "4245:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4252:3:4",
														"nodeType": "YulTypedName",
														"src": "4252:3:4",
														"type": ""
													}
												],
												"src": "4192:118:4"
											},
											{
												"body": {
													"nativeSrc": "4414:124:4",
													"nodeType": "YulBlock",
													"src": "4414:124:4",
													"statements": [
														{
															"nativeSrc": "4424:26:4",
															"nodeType": "YulAssignment",
															"src": "4424:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4436:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4436:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4447:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4447:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4432:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:4"
																},
																"nativeSrc": "4432:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4432:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4424:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4424:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4504:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4517:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4528:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4528:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4513:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:4"
																		},
																		"nativeSrc": "4513:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4460:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4460:43:4"
																},
																"nativeSrc": "4460:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4460:71:4"
															},
															"nativeSrc": "4460:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4460:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4316:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4386:9:4",
														"nodeType": "YulTypedName",
														"src": "4386:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4398:6:4",
														"nodeType": "YulTypedName",
														"src": "4398:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4409:4:4",
														"nodeType": "YulTypedName",
														"src": "4409:4:4",
														"type": ""
													}
												],
												"src": "4316:222:4"
											},
											{
												"body": {
													"nativeSrc": "4670:206:4",
													"nodeType": "YulBlock",
													"src": "4670:206:4",
													"statements": [
														{
															"nativeSrc": "4680:26:4",
															"nodeType": "YulAssignment",
															"src": "4680:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4692:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4692:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4703:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4703:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4688:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4688:3:4"
																},
																"nativeSrc": "4688:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4688:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4680:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4680:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4760:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4773:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4773:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4784:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4784:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4769:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:4"
																		},
																		"nativeSrc": "4769:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4716:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4716:43:4"
																},
																"nativeSrc": "4716:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4716:71:4"
															},
															"nativeSrc": "4716:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4716:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4841:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4854:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4865:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4865:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:4"
																		},
																		"nativeSrc": "4850:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4797:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4797:43:4"
																},
																"nativeSrc": "4797:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4797:72:4"
															},
															"nativeSrc": "4797:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4797:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4544:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4634:9:4",
														"nodeType": "YulTypedName",
														"src": "4634:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4646:6:4",
														"nodeType": "YulTypedName",
														"src": "4646:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4654:6:4",
														"nodeType": "YulTypedName",
														"src": "4654:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4665:4:4",
														"nodeType": "YulTypedName",
														"src": "4665:4:4",
														"type": ""
													}
												],
												"src": "4544:332:4"
											},
											{
												"body": {
													"nativeSrc": "4948:263:4",
													"nodeType": "YulBlock",
													"src": "4948:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4994:83:4",
																"nodeType": "YulBlock",
																"src": "4994:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4996:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4996:77:4"
																			},
																			"nativeSrc": "4996:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4996:79:4"
																		},
																		"nativeSrc": "4996:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4996:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4969:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4969:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4978:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4965:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:4"
																		},
																		"nativeSrc": "4965:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4990:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4961:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4961:3:4"
																},
																"nativeSrc": "4961:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4961:32:4"
															},
															"nativeSrc": "4958:119:4",
															"nodeType": "YulIf",
															"src": "4958:119:4"
														},
														{
															"nativeSrc": "5087:117:4",
															"nodeType": "YulBlock",
															"src": "5087:117:4",
															"statements": [
																{
																	"nativeSrc": "5102:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5102:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5116:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5116:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5106:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5106:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5131:63:4",
																	"nodeType": "YulAssignment",
																	"src": "5131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5166:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5166:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5177:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5162:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5162:3:4"
																				},
																				"nativeSrc": "5162:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5186:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5141:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "5141:20:4"
																		},
																		"nativeSrc": "5141:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5131:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4882:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4918:9:4",
														"nodeType": "YulTypedName",
														"src": "4918:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4929:7:4",
														"nodeType": "YulTypedName",
														"src": "4929:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4941:6:4",
														"nodeType": "YulTypedName",
														"src": "4941:6:4",
														"type": ""
													}
												],
												"src": "4882:329:4"
											},
											{
												"body": {
													"nativeSrc": "5313:73:4",
													"nodeType": "YulBlock",
													"src": "5313:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5330:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5330:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5335:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5335:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5323:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:4"
																},
																"nativeSrc": "5323:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5323:19:4"
															},
															"nativeSrc": "5323:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "5323:19:4"
														},
														{
															"nativeSrc": "5351:29:4",
															"nodeType": "YulAssignment",
															"src": "5351:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5370:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5370:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5375:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5366:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5366:3:4"
																},
																"nativeSrc": "5366:14:4",
																"nodeType": "YulFunctionCall",
																"src": "5366:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5351:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "5351:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5217:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5285:3:4",
														"nodeType": "YulTypedName",
														"src": "5285:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5290:6:4",
														"nodeType": "YulTypedName",
														"src": "5290:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5301:11:4",
														"nodeType": "YulTypedName",
														"src": "5301:11:4",
														"type": ""
													}
												],
												"src": "5217:169:4"
											},
											{
												"body": {
													"nativeSrc": "5498:67:4",
													"nodeType": "YulBlock",
													"src": "5498:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5520:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5520:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5528:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5528:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5516:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:4"
																		},
																		"nativeSrc": "5516:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:14:4"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "5532:25:4",
																		"nodeType": "YulLiteral",
																		"src": "5532:25:4",
																		"type": "",
																		"value": "Amount must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5509:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:4"
																},
																"nativeSrc": "5509:49:4",
																"nodeType": "YulFunctionCall",
																"src": "5509:49:4"
															},
															"nativeSrc": "5509:49:4",
															"nodeType": "YulExpressionStatement",
															"src": "5509:49:4"
														}
													]
												},
												"name": "store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
												"nativeSrc": "5392:173:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5490:6:4",
														"nodeType": "YulTypedName",
														"src": "5490:6:4",
														"type": ""
													}
												],
												"src": "5392:173:4"
											},
											{
												"body": {
													"nativeSrc": "5717:220:4",
													"nodeType": "YulBlock",
													"src": "5717:220:4",
													"statements": [
														{
															"nativeSrc": "5727:74:4",
															"nodeType": "YulAssignment",
															"src": "5727:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5793:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5793:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5734:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "5734:58:4"
																},
																"nativeSrc": "5734:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5734:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5727:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5899:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5899:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																	"nativeSrc": "5810:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5810:88:4"
																},
																"nativeSrc": "5810:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5810:93:4"
															},
															"nativeSrc": "5810:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5810:93:4"
														},
														{
															"nativeSrc": "5912:19:4",
															"nodeType": "YulAssignment",
															"src": "5912:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5923:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5928:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5928:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5919:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5919:3:4"
																},
																"nativeSrc": "5919:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5919:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5912:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5571:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5705:3:4",
														"nodeType": "YulTypedName",
														"src": "5705:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5713:3:4",
														"nodeType": "YulTypedName",
														"src": "5713:3:4",
														"type": ""
													}
												],
												"src": "5571:366:4"
											},
											{
												"body": {
													"nativeSrc": "6114:248:4",
													"nodeType": "YulBlock",
													"src": "6114:248:4",
													"statements": [
														{
															"nativeSrc": "6124:26:4",
															"nodeType": "YulAssignment",
															"src": "6124:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6136:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6136:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6147:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6147:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6132:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6132:3:4"
																},
																"nativeSrc": "6132:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6132:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6124:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6124:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6171:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6171:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6182:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6182:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6167:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6167:3:4"
																		},
																		"nativeSrc": "6167:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6167:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6190:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6190:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6186:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:4"
																		},
																		"nativeSrc": "6186:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:4"
																},
																"nativeSrc": "6160:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6160:47:4"
															},
															"nativeSrc": "6160:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6160:47:4"
														},
														{
															"nativeSrc": "6216:139:4",
															"nodeType": "YulAssignment",
															"src": "6216:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6350:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6350:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6224:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6224:124:4"
																},
																"nativeSrc": "6224:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6224:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6216:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6216:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5943:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6094:9:4",
														"nodeType": "YulTypedName",
														"src": "6094:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6109:4:4",
														"nodeType": "YulTypedName",
														"src": "6109:4:4",
														"type": ""
													}
												],
												"src": "5943:419:4"
											},
											{
												"body": {
													"nativeSrc": "6522:288:4",
													"nodeType": "YulBlock",
													"src": "6522:288:4",
													"statements": [
														{
															"nativeSrc": "6532:26:4",
															"nodeType": "YulAssignment",
															"src": "6532:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6544:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6544:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6555:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6555:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6540:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:4"
																},
																"nativeSrc": "6540:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6540:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6532:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6612:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6612:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6625:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6625:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6636:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6636:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6621:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6621:3:4"
																		},
																		"nativeSrc": "6621:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6621:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6568:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6568:43:4"
																},
																"nativeSrc": "6568:71:4",
																"nodeType": "YulFunctionCall",
																"src": "6568:71:4"
															},
															"nativeSrc": "6568:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "6568:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6693:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6693:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6706:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6706:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6717:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6717:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6702:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6702:3:4"
																		},
																		"nativeSrc": "6702:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6702:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6649:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6649:43:4"
																},
																"nativeSrc": "6649:72:4",
																"nodeType": "YulFunctionCall",
																"src": "6649:72:4"
															},
															"nativeSrc": "6649:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "6649:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6775:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6775:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6788:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6799:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6799:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6784:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:4"
																		},
																		"nativeSrc": "6784:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6784:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6731:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6731:43:4"
																},
																"nativeSrc": "6731:72:4",
																"nodeType": "YulFunctionCall",
																"src": "6731:72:4"
															},
															"nativeSrc": "6731:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "6731:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6368:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6478:9:4",
														"nodeType": "YulTypedName",
														"src": "6478:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6490:6:4",
														"nodeType": "YulTypedName",
														"src": "6490:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6498:6:4",
														"nodeType": "YulTypedName",
														"src": "6498:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6506:6:4",
														"nodeType": "YulTypedName",
														"src": "6506:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6517:4:4",
														"nodeType": "YulTypedName",
														"src": "6517:4:4",
														"type": ""
													}
												],
												"src": "6368:442:4"
											},
											{
												"body": {
													"nativeSrc": "6858:48:4",
													"nodeType": "YulBlock",
													"src": "6858:48:4",
													"statements": [
														{
															"nativeSrc": "6868:32:4",
															"nodeType": "YulAssignment",
															"src": "6868:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6893:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6893:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6886:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6886:6:4"
																		},
																		"nativeSrc": "6886:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6879:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:4"
																},
																"nativeSrc": "6879:21:4",
																"nodeType": "YulFunctionCall",
																"src": "6879:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6868:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6868:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6816:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6840:5:4",
														"nodeType": "YulTypedName",
														"src": "6840:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6850:7:4",
														"nodeType": "YulTypedName",
														"src": "6850:7:4",
														"type": ""
													}
												],
												"src": "6816:90:4"
											},
											{
												"body": {
													"nativeSrc": "6952:76:4",
													"nodeType": "YulBlock",
													"src": "6952:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7006:16:4",
																"nodeType": "YulBlock",
																"src": "7006:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7015:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7018:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7018:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7008:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7008:6:4"
																			},
																			"nativeSrc": "7008:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7008:12:4"
																		},
																		"nativeSrc": "7008:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7008:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6975:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6975:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6997:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6997:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6982:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "6982:14:4"
																				},
																				"nativeSrc": "6982:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6982:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6972:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6972:2:4"
																		},
																		"nativeSrc": "6972:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6965:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6965:6:4"
																},
																"nativeSrc": "6965:40:4",
																"nodeType": "YulFunctionCall",
																"src": "6965:40:4"
															},
															"nativeSrc": "6962:60:4",
															"nodeType": "YulIf",
															"src": "6962:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6912:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6945:5:4",
														"nodeType": "YulTypedName",
														"src": "6945:5:4",
														"type": ""
													}
												],
												"src": "6912:116:4"
											},
											{
												"body": {
													"nativeSrc": "7094:77:4",
													"nodeType": "YulBlock",
													"src": "7094:77:4",
													"statements": [
														{
															"nativeSrc": "7104:22:4",
															"nodeType": "YulAssignment",
															"src": "7104:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7119:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7119:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7113:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7113:5:4"
																},
																"nativeSrc": "7113:13:4",
																"nodeType": "YulFunctionCall",
																"src": "7113:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7104:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7104:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7159:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7159:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7135:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "7135:23:4"
																},
																"nativeSrc": "7135:30:4",
																"nodeType": "YulFunctionCall",
																"src": "7135:30:4"
															},
															"nativeSrc": "7135:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "7135:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7034:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7072:6:4",
														"nodeType": "YulTypedName",
														"src": "7072:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7080:3:4",
														"nodeType": "YulTypedName",
														"src": "7080:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7088:5:4",
														"nodeType": "YulTypedName",
														"src": "7088:5:4",
														"type": ""
													}
												],
												"src": "7034:137:4"
											},
											{
												"body": {
													"nativeSrc": "7251:271:4",
													"nodeType": "YulBlock",
													"src": "7251:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7297:83:4",
																"nodeType": "YulBlock",
																"src": "7297:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7299:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "7299:77:4"
																			},
																			"nativeSrc": "7299:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7299:79:4"
																		},
																		"nativeSrc": "7299:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7299:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7272:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "7272:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7281:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7281:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7268:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7268:3:4"
																		},
																		"nativeSrc": "7268:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7268:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7264:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7264:3:4"
																},
																"nativeSrc": "7264:32:4",
																"nodeType": "YulFunctionCall",
																"src": "7264:32:4"
															},
															"nativeSrc": "7261:119:4",
															"nodeType": "YulIf",
															"src": "7261:119:4"
														},
														{
															"nativeSrc": "7390:125:4",
															"nodeType": "YulBlock",
															"src": "7390:125:4",
															"statements": [
																{
																	"nativeSrc": "7405:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7405:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7419:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7419:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7409:6:4",
																			"nodeType": "YulTypedName",
																			"src": "7409:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7434:71:4",
																	"nodeType": "YulAssignment",
																	"src": "7434:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7477:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "7477:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7488:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "7488:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7473:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7473:3:4"
																				},
																				"nativeSrc": "7473:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7473:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7497:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "7497:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7444:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "7444:28:4"
																		},
																		"nativeSrc": "7444:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7434:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "7434:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7177:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7221:9:4",
														"nodeType": "YulTypedName",
														"src": "7221:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7232:7:4",
														"nodeType": "YulTypedName",
														"src": "7232:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7244:6:4",
														"nodeType": "YulTypedName",
														"src": "7244:6:4",
														"type": ""
													}
												],
												"src": "7177:345:4"
											},
											{
												"body": {
													"nativeSrc": "7634:59:4",
													"nodeType": "YulBlock",
													"src": "7634:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7656:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7656:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7664:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7664:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7652:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:4"
																		},
																		"nativeSrc": "7652:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:14:4"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7668:17:4",
																		"nodeType": "YulLiteral",
																		"src": "7668:17:4",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7645:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:4"
																},
																"nativeSrc": "7645:41:4",
																"nodeType": "YulFunctionCall",
																"src": "7645:41:4"
															},
															"nativeSrc": "7645:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "7645:41:4"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "7528:165:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7626:6:4",
														"nodeType": "YulTypedName",
														"src": "7626:6:4",
														"type": ""
													}
												],
												"src": "7528:165:4"
											},
											{
												"body": {
													"nativeSrc": "7845:220:4",
													"nodeType": "YulBlock",
													"src": "7845:220:4",
													"statements": [
														{
															"nativeSrc": "7855:74:4",
															"nodeType": "YulAssignment",
															"src": "7855:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7921:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7921:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7926:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7926:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7862:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7862:58:4"
																},
																"nativeSrc": "7862:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7862:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7855:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7855:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8027:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8027:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "7938:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7938:88:4"
																},
																"nativeSrc": "7938:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7938:93:4"
															},
															"nativeSrc": "7938:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7938:93:4"
														},
														{
															"nativeSrc": "8040:19:4",
															"nodeType": "YulAssignment",
															"src": "8040:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8051:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8051:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8056:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8056:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8047:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:4"
																},
																"nativeSrc": "8047:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8047:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8040:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8040:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7699:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7833:3:4",
														"nodeType": "YulTypedName",
														"src": "7833:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7841:3:4",
														"nodeType": "YulTypedName",
														"src": "7841:3:4",
														"type": ""
													}
												],
												"src": "7699:366:4"
											},
											{
												"body": {
													"nativeSrc": "8242:248:4",
													"nodeType": "YulBlock",
													"src": "8242:248:4",
													"statements": [
														{
															"nativeSrc": "8252:26:4",
															"nodeType": "YulAssignment",
															"src": "8252:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8264:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8264:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8275:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8275:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8260:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8260:3:4"
																},
																"nativeSrc": "8260:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8260:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8252:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8252:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8299:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8299:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8310:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8310:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8295:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8295:3:4"
																		},
																		"nativeSrc": "8295:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8295:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8318:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8318:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8324:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8324:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8314:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8314:3:4"
																		},
																		"nativeSrc": "8314:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8314:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8288:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:4"
																},
																"nativeSrc": "8288:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8288:47:4"
															},
															"nativeSrc": "8288:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8288:47:4"
														},
														{
															"nativeSrc": "8344:139:4",
															"nodeType": "YulAssignment",
															"src": "8344:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8478:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8478:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8352:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8352:124:4"
																},
																"nativeSrc": "8352:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8352:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8344:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8344:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8071:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8222:9:4",
														"nodeType": "YulTypedName",
														"src": "8222:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8237:4:4",
														"nodeType": "YulTypedName",
														"src": "8237:4:4",
														"type": ""
													}
												],
												"src": "8071:419:4"
											},
											{
												"body": {
													"nativeSrc": "8524:152:4",
													"nodeType": "YulBlock",
													"src": "8524:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8541:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8541:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8544:77:4",
																		"nodeType": "YulLiteral",
																		"src": "8544:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8534:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:4"
																},
																"nativeSrc": "8534:88:4",
																"nodeType": "YulFunctionCall",
																"src": "8534:88:4"
															},
															"nativeSrc": "8534:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "8534:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8638:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8638:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8641:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8631:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:4"
																},
																"nativeSrc": "8631:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8631:15:4"
															},
															"nativeSrc": "8631:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8631:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8662:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8662:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8665:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8665:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8655:6:4"
																},
																"nativeSrc": "8655:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8655:15:4"
															},
															"nativeSrc": "8655:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8655:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8496:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "8496:180:4"
											},
											{
												"body": {
													"nativeSrc": "8726:147:4",
													"nodeType": "YulBlock",
													"src": "8726:147:4",
													"statements": [
														{
															"nativeSrc": "8736:25:4",
															"nodeType": "YulAssignment",
															"src": "8736:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8759:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8759:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8741:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8741:17:4"
																},
																"nativeSrc": "8741:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8741:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8736:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8736:1:4"
																}
															]
														},
														{
															"nativeSrc": "8770:25:4",
															"nodeType": "YulAssignment",
															"src": "8770:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8793:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8793:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8775:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8775:17:4"
																},
																"nativeSrc": "8775:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8775:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8770:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8770:1:4"
																}
															]
														},
														{
															"nativeSrc": "8804:16:4",
															"nodeType": "YulAssignment",
															"src": "8804:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8815:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8815:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8818:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8818:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8811:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8811:3:4"
																},
																"nativeSrc": "8811:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8811:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8804:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8804:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8844:22:4",
																"nodeType": "YulBlock",
																"src": "8844:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8846:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8846:16:4"
																			},
																			"nativeSrc": "8846:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8846:18:4"
																		},
																		"nativeSrc": "8846:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8836:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8836:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8839:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8839:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8833:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "8833:2:4"
																},
																"nativeSrc": "8833:10:4",
																"nodeType": "YulFunctionCall",
																"src": "8833:10:4"
															},
															"nativeSrc": "8830:36:4",
															"nodeType": "YulIf",
															"src": "8830:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8682:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8713:1:4",
														"nodeType": "YulTypedName",
														"src": "8713:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8716:1:4",
														"nodeType": "YulTypedName",
														"src": "8716:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8722:3:4",
														"nodeType": "YulTypedName",
														"src": "8722:3:4",
														"type": ""
													}
												],
												"src": "8682:191:4"
											},
											{
												"body": {
													"nativeSrc": "8985:65:4",
													"nodeType": "YulBlock",
													"src": "8985:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9007:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9007:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9015:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9003:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9003:3:4"
																		},
																		"nativeSrc": "9003:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9003:14:4"
																	},
																	{
																		"hexValue": "4e6f2073686172657320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "9019:23:4",
																		"nodeType": "YulLiteral",
																		"src": "9019:23:4",
																		"type": "",
																		"value": "No shares to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8996:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8996:6:4"
																},
																"nativeSrc": "8996:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8996:47:4"
															},
															"nativeSrc": "8996:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8996:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d",
												"nativeSrc": "8879:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8977:6:4",
														"nodeType": "YulTypedName",
														"src": "8977:6:4",
														"type": ""
													}
												],
												"src": "8879:171:4"
											},
											{
												"body": {
													"nativeSrc": "9202:220:4",
													"nodeType": "YulBlock",
													"src": "9202:220:4",
													"statements": [
														{
															"nativeSrc": "9212:74:4",
															"nodeType": "YulAssignment",
															"src": "9212:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9278:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9278:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9283:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9219:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "9219:58:4"
																},
																"nativeSrc": "9219:67:4",
																"nodeType": "YulFunctionCall",
																"src": "9219:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9212:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9384:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9384:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d",
																	"nativeSrc": "9295:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "9295:88:4"
																},
																"nativeSrc": "9295:93:4",
																"nodeType": "YulFunctionCall",
																"src": "9295:93:4"
															},
															"nativeSrc": "9295:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "9295:93:4"
														},
														{
															"nativeSrc": "9397:19:4",
															"nodeType": "YulAssignment",
															"src": "9397:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9408:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9408:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9404:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:4"
																},
																"nativeSrc": "9404:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9404:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9397:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9397:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9056:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9190:3:4",
														"nodeType": "YulTypedName",
														"src": "9190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9198:3:4",
														"nodeType": "YulTypedName",
														"src": "9198:3:4",
														"type": ""
													}
												],
												"src": "9056:366:4"
											},
											{
												"body": {
													"nativeSrc": "9599:248:4",
													"nodeType": "YulBlock",
													"src": "9599:248:4",
													"statements": [
														{
															"nativeSrc": "9609:26:4",
															"nodeType": "YulAssignment",
															"src": "9609:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9621:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9621:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9632:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9632:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9617:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9617:3:4"
																},
																"nativeSrc": "9617:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9617:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9609:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9609:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9656:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9656:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9667:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9667:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9652:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:4"
																		},
																		"nativeSrc": "9652:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9652:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9675:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9675:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9681:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9671:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9671:3:4"
																		},
																		"nativeSrc": "9671:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9671:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9645:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:4"
																},
																"nativeSrc": "9645:47:4",
																"nodeType": "YulFunctionCall",
																"src": "9645:47:4"
															},
															"nativeSrc": "9645:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "9645:47:4"
														},
														{
															"nativeSrc": "9701:139:4",
															"nodeType": "YulAssignment",
															"src": "9701:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9835:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9835:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9709:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "9709:124:4"
																},
																"nativeSrc": "9709:131:4",
																"nodeType": "YulFunctionCall",
																"src": "9709:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9701:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9428:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9579:9:4",
														"nodeType": "YulTypedName",
														"src": "9579:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9594:4:4",
														"nodeType": "YulTypedName",
														"src": "9594:4:4",
														"type": ""
													}
												],
												"src": "9428:419:4"
											},
											{
												"body": {
													"nativeSrc": "9901:362:4",
													"nodeType": "YulBlock",
													"src": "9901:362:4",
													"statements": [
														{
															"nativeSrc": "9911:25:4",
															"nodeType": "YulAssignment",
															"src": "9911:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9934:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9934:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9916:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9916:17:4"
																},
																"nativeSrc": "9916:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9916:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9911:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9911:1:4"
																}
															]
														},
														{
															"nativeSrc": "9945:25:4",
															"nodeType": "YulAssignment",
															"src": "9945:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9968:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9968:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9950:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9950:17:4"
																},
																"nativeSrc": "9950:20:4",
																"nodeType": "YulFunctionCall",
																"src": "9950:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9945:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9945:1:4"
																}
															]
														},
														{
															"nativeSrc": "9979:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "9979:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10002:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10002:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10005:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10005:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9998:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9998:3:4"
																},
																"nativeSrc": "9998:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9998:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9983:11:4",
																	"nodeType": "YulTypedName",
																	"src": "9983:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10016:41:4",
															"nodeType": "YulAssignment",
															"src": "10016:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10045:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "10045:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10027:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10027:17:4"
																},
																"nativeSrc": "10027:30:4",
																"nodeType": "YulFunctionCall",
																"src": "10027:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10016:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "10016:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10234:22:4",
																"nodeType": "YulBlock",
																"src": "10234:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10236:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10236:16:4"
																			},
																			"nativeSrc": "10236:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10236:18:4"
																		},
																		"nativeSrc": "10236:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10236:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10167:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "10167:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10160:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "10160:6:4"
																				},
																				"nativeSrc": "10160:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10160:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10190:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "10190:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10197:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "10197:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10206:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "10206:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10193:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "10193:3:4"
																						},
																						"nativeSrc": "10193:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "10193:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10187:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "10187:2:4"
																				},
																				"nativeSrc": "10187:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10187:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10140:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "10140:2:4"
																		},
																		"nativeSrc": "10140:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10140:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10120:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:4"
																},
																"nativeSrc": "10120:113:4",
																"nodeType": "YulFunctionCall",
																"src": "10120:113:4"
															},
															"nativeSrc": "10117:139:4",
															"nodeType": "YulIf",
															"src": "10117:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9853:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9884:1:4",
														"nodeType": "YulTypedName",
														"src": "9884:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9887:1:4",
														"nodeType": "YulTypedName",
														"src": "9887:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9893:7:4",
														"nodeType": "YulTypedName",
														"src": "9893:7:4",
														"type": ""
													}
												],
												"src": "9853:410:4"
											},
											{
												"body": {
													"nativeSrc": "10297:152:4",
													"nodeType": "YulBlock",
													"src": "10297:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10314:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10314:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10317:77:4",
																		"nodeType": "YulLiteral",
																		"src": "10317:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10307:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:4"
																},
																"nativeSrc": "10307:88:4",
																"nodeType": "YulFunctionCall",
																"src": "10307:88:4"
															},
															"nativeSrc": "10307:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "10307:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10414:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:4"
																},
																"nativeSrc": "10404:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10404:15:4"
															},
															"nativeSrc": "10404:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10404:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10435:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10435:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10438:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10438:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10428:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:4"
																},
																"nativeSrc": "10428:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10428:15:4"
															},
															"nativeSrc": "10428:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10428:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10269:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "10269:180:4"
											},
											{
												"body": {
													"nativeSrc": "10497:143:4",
													"nodeType": "YulBlock",
													"src": "10497:143:4",
													"statements": [
														{
															"nativeSrc": "10507:25:4",
															"nodeType": "YulAssignment",
															"src": "10507:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10530:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10530:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10512:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10512:17:4"
																},
																"nativeSrc": "10512:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10512:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10507:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10507:1:4"
																}
															]
														},
														{
															"nativeSrc": "10541:25:4",
															"nodeType": "YulAssignment",
															"src": "10541:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10564:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10564:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10546:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10546:17:4"
																},
																"nativeSrc": "10546:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10546:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10541:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10541:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10588:22:4",
																"nodeType": "YulBlock",
																"src": "10588:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10590:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10590:16:4"
																			},
																			"nativeSrc": "10590:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10590:18:4"
																		},
																		"nativeSrc": "10590:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10590:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10585:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10585:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10578:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10578:6:4"
																},
																"nativeSrc": "10578:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10578:9:4"
															},
															"nativeSrc": "10575:35:4",
															"nodeType": "YulIf",
															"src": "10575:35:4"
														},
														{
															"nativeSrc": "10620:14:4",
															"nodeType": "YulAssignment",
															"src": "10620:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10629:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10629:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10632:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10632:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10625:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10625:3:4"
																},
																"nativeSrc": "10625:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10625:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10620:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10620:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10455:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10486:1:4",
														"nodeType": "YulTypedName",
														"src": "10486:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10489:1:4",
														"nodeType": "YulTypedName",
														"src": "10489:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10495:1:4",
														"nodeType": "YulTypedName",
														"src": "10495:1:4",
														"type": ""
													}
												],
												"src": "10455:185:4"
											},
											{
												"body": {
													"nativeSrc": "10691:149:4",
													"nodeType": "YulBlock",
													"src": "10691:149:4",
													"statements": [
														{
															"nativeSrc": "10701:25:4",
															"nodeType": "YulAssignment",
															"src": "10701:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10724:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10724:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10706:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10706:17:4"
																},
																"nativeSrc": "10706:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10706:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10701:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10701:1:4"
																}
															]
														},
														{
															"nativeSrc": "10735:25:4",
															"nodeType": "YulAssignment",
															"src": "10735:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10758:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10758:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10740:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10740:17:4"
																},
																"nativeSrc": "10740:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10740:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10735:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10735:1:4"
																}
															]
														},
														{
															"nativeSrc": "10769:17:4",
															"nodeType": "YulAssignment",
															"src": "10769:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10781:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10781:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10784:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10784:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10777:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10777:3:4"
																},
																"nativeSrc": "10777:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10777:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10769:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10769:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10811:22:4",
																"nodeType": "YulBlock",
																"src": "10811:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10813:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10813:16:4"
																			},
																			"nativeSrc": "10813:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10813:18:4"
																		},
																		"nativeSrc": "10813:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10813:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10802:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10802:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10808:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10808:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10799:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "10799:2:4"
																},
																"nativeSrc": "10799:11:4",
																"nodeType": "YulFunctionCall",
																"src": "10799:11:4"
															},
															"nativeSrc": "10796:37:4",
															"nodeType": "YulIf",
															"src": "10796:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10646:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10677:1:4",
														"nodeType": "YulTypedName",
														"src": "10677:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10680:1:4",
														"nodeType": "YulTypedName",
														"src": "10680:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10686:4:4",
														"nodeType": "YulTypedName",
														"src": "10686:4:4",
														"type": ""
													}
												],
												"src": "10646:194:4"
											},
											{
												"body": {
													"nativeSrc": "10972:206:4",
													"nodeType": "YulBlock",
													"src": "10972:206:4",
													"statements": [
														{
															"nativeSrc": "10982:26:4",
															"nodeType": "YulAssignment",
															"src": "10982:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10994:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "10994:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11005:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11005:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10990:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10990:3:4"
																},
																"nativeSrc": "10990:18:4",
																"nodeType": "YulFunctionCall",
																"src": "10990:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10982:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10982:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11062:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11062:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11075:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11075:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11086:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11086:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11071:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11071:3:4"
																		},
																		"nativeSrc": "11071:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11071:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11018:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "11018:43:4"
																},
																"nativeSrc": "11018:71:4",
																"nodeType": "YulFunctionCall",
																"src": "11018:71:4"
															},
															"nativeSrc": "11018:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "11018:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11143:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11143:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11156:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11156:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11167:2:4",
																				"nodeType": "YulLiteral",
																				"src": "11167:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11152:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11152:3:4"
																		},
																		"nativeSrc": "11152:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11152:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11099:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "11099:43:4"
																},
																"nativeSrc": "11099:72:4",
																"nodeType": "YulFunctionCall",
																"src": "11099:72:4"
															},
															"nativeSrc": "11099:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "11099:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10846:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10936:9:4",
														"nodeType": "YulTypedName",
														"src": "10936:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10948:6:4",
														"nodeType": "YulTypedName",
														"src": "10948:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10956:6:4",
														"nodeType": "YulTypedName",
														"src": "10956:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10967:4:4",
														"nodeType": "YulTypedName",
														"src": "10967:4:4",
														"type": ""
													}
												],
												"src": "10846:332:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No shares to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA466F542 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xC8C85BAD EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xEEA04D09 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH3 0xAEEF8A EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x127E2B15 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP3 SWAP2 SWAP1 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x242 DUP7 DUP7 DUP7 PUSH2 0x724 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD DUP3 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP3 SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x627 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x631 PUSH1 0x0 PUSH2 0x917 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x2710 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x77F JUMPI PUSH1 0x2 DUP6 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP3 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP2 LT PUSH2 0x7B7 JUMPI DUP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST DUP2 DUP5 PUSH1 0x0 ADD SLOAD DUP9 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x812 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x884 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88D DUP2 PUSH2 0x917 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x898 PUSH2 0x9DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B6 PUSH2 0x633 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x915 JUMPI PUSH2 0x8D9 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP2 EQ PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA18 DUP2 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA36 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA45 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA56 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA67 DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH2 0xAB1 PUSH2 0xAAC DUP5 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0xA9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP6 DUP3 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB41 DUP6 DUP3 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xB4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB90 DUP2 PUSH2 0xB4B JUMP JUMPDEST DUP2 EQ PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAD DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDA DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBEB DUP7 DUP3 DUP8 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBFC DUP7 DUP3 DUP8 ADD PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xC0F DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC45 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xC52 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xC6E PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC7D DUP5 DUP3 DUP6 ADD PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD PUSH1 0x17 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD8 DUP3 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFC DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD18 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xD25 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xD32 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4F DUP2 PUSH2 0xD3A JUMP JUMPDEST DUP2 EQ PUSH2 0xD5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6C DUP2 PUSH2 0xD46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD96 DUP5 DUP3 DUP6 ADD PUSH2 0xD5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 PUSH1 0xF DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE04 DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE45 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE50 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE67 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073686172657320746F2077697468647261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA4 PUSH1 0x15 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAF DUP3 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED3 DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE5 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF0 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEFE DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF15 JUMPI PUSH2 0xF14 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF56 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF61 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF71 JUMPI PUSH2 0xF70 PUSH2 0xF1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF92 DUP4 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0xFD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xDD 0x28 0xE3 CREATE2 0xD0 0x23 ADDMOD DUP1 0xAA 0xA5 0xF EXTCODESIZE RETURNDATASIZE MUL 0xD5 PUSH11 0x3F2A84A28EAE46870E6165 CHAINID DUP11 DUP2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "174:3792:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:730;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;220:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2639:694;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3703:260:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3397:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1642:900;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;850:730:3;955:1;946:6;:10;938:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;995:23;1021:8;:15;1030:5;1021:15;;;;;;;;;;;995:41;;1047:17;1067:7;:14;;:26;1082:10;1067:26;;;;;;;;;;;1047:46;;1171:14;1188:42;1204:5;1211:10;1223:6;1188:15;:42::i;:::-;1171:59;;1314:10;;;;;;;;;;;:23;;;1338:10;1358:4;1365:6;1314:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1306:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1481:6;1458:4;:19;;;:29;;;;;;;:::i;:::-;;;;;;;;1529:6;1498:4;:15;;:27;1514:10;1498:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1566:6;1546:4;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;927:653;;;850:730;;;:::o;220:24::-;;;;;;;;;;;;;:::o;2639:694::-;2712:23;2738:8;:15;2747:5;2738:15;;;;;;;;;;;2712:41;;2764:17;2784:7;:14;;:26;2799:10;2784:26;;;;;;;;;;;2764:46;;2821:18;2842:4;:15;;:27;2858:10;2842:27;;;;;;;;;;;;;;;;2821:48;;2901:1;2888:10;:14;2880:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2941:22;3003:4;:16;;;2989:10;2967:4;:19;;;:32;;;;:::i;:::-;2966:53;;;;:::i;:::-;2941:78;;3091:14;3068:4;:19;;;:37;;;;;;;:::i;:::-;;;;;;;;3136:10;3116:4;:16;;;:30;;;;;;;:::i;:::-;;;;;;;;3164:4;:15;;:27;3180:10;3164:27;;;;;;;;;;;;;;;3157:34;;;3258:10;;;;;;;;;;;:19;;;3278:10;3290:14;3258:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3250:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2701:632;;;;2639:694;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3703:260:3:-;3798:7;3818:23;3844:8;:15;3853:5;3844:15;;;;;;;;;;;3818:41;;3870:17;3890:7;:14;;:26;3905:10;3890:26;;;;;;;;;;;3870:46;;3934:4;:15;;:21;3950:4;3934:21;;;;;;;;;;;;;;;;3927:28;;;;3703:260;;;;;:::o;3397:298::-;3476:19;3497:22;3532:23;3558:8;:15;3567:5;3558:15;;;;;;;;;;;3532:41;;3584:17;3604:7;:14;;:26;3619:10;3604:26;;;;;;;;;;;3584:46;;3649:4;:16;;;3667:4;:19;;;3641:46;;;;;;3397:298;;;;;:::o;1642:900::-;1739:7;1755:23;1781:8;:15;1790:5;1781:15;;;;;;;;;;;1755:41;;1803:17;1823:7;:14;;:26;1838:10;1823:26;;;;;;;;;;;1803:46;;1856:25;1884:5;1856:33;;1990:1;1967:4;:19;;;:24;1963:115;;2020:1;2011:6;:10;;;;:::i;:::-;2004:17;;;;;;;1963:115;2086:12;2144:17;2122:4;:19;;;:39;;;;:::i;:::-;2101:17;:61;;;;:::i;:::-;2086:76;;2203:1;2183:17;:21;;;;:::i;:::-;2176:4;:28;:59;;2231:4;2176:59;;;2227:1;2207:17;:21;;;;:::i;:::-;2176:59;2169:66;;2520:17;2498:4;:19;;;:39;;;;:::i;:::-;2489:4;2470;:16;;;2461:6;:25;;;;:::i;:::-;:32;;;;:::i;:::-;2460:78;;;;:::i;:::-;2453:85;;;;;;1642:900;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:126::-;1352:7;1392:42;1385:5;1381:54;1370:65;;1315:126;;;:::o;1447:60::-;1475:3;1496:5;1489:12;;1447:60;;;:::o;1513:142::-;1563:9;1596:53;1614:34;1623:24;1641:5;1623:24;:::i;:::-;1614:34;:::i;:::-;1596:53;:::i;:::-;1583:66;;1513:142;;;:::o;1661:126::-;1711:9;1744:37;1775:5;1744:37;:::i;:::-;1731:50;;1661:126;;;:::o;1793:140::-;1857:9;1890:37;1921:5;1890:37;:::i;:::-;1877:50;;1793:140;;;:::o;1939:159::-;2040:51;2085:5;2040:51;:::i;:::-;2035:3;2028:64;1939:159;;:::o;2104:250::-;2211:4;2249:2;2238:9;2234:18;2226:26;;2262:85;2344:1;2333:9;2329:17;2320:6;2262:85;:::i;:::-;2104:250;;;;:::o;2360:474::-;2428:6;2436;2485:2;2473:9;2464:7;2460:23;2456:32;2453:119;;;2491:79;;:::i;:::-;2453:119;2611:1;2636:53;2681:7;2672:6;2661:9;2657:22;2636:53;:::i;:::-;2626:63;;2582:117;2738:2;2764:53;2809:7;2800:6;2789:9;2785:22;2764:53;:::i;:::-;2754:63;;2709:118;2360:474;;;;;:::o;2840:96::-;2877:7;2906:24;2924:5;2906:24;:::i;:::-;2895:35;;2840:96;;;:::o;2942:118::-;3029:24;3047:5;3029:24;:::i;:::-;3024:3;3017:37;2942:118;;:::o;3066:222::-;3159:4;3197:2;3186:9;3182:18;3174:26;;3210:71;3278:1;3267:9;3263:17;3254:6;3210:71;:::i;:::-;3066:222;;;;:::o;3294:122::-;3367:24;3385:5;3367:24;:::i;:::-;3360:5;3357:35;3347:63;;3406:1;3403;3396:12;3347:63;3294:122;:::o;3422:139::-;3468:5;3506:6;3493:20;3484:29;;3522:33;3549:5;3522:33;:::i;:::-;3422:139;;;;:::o;3567:619::-;3644:6;3652;3660;3709:2;3697:9;3688:7;3684:23;3680:32;3677:119;;;3715:79;;:::i;:::-;3677:119;3835:1;3860:53;3905:7;3896:6;3885:9;3881:22;3860:53;:::i;:::-;3850:63;;3806:117;3962:2;3988:53;4033:7;4024:6;4013:9;4009:22;3988:53;:::i;:::-;3978:63;;3933:118;4090:2;4116:53;4161:7;4152:6;4141:9;4137:22;4116:53;:::i;:::-;4106:63;;4061:118;3567:619;;;;;:::o;4192:118::-;4279:24;4297:5;4279:24;:::i;:::-;4274:3;4267:37;4192:118;;:::o;4316:222::-;4409:4;4447:2;4436:9;4432:18;4424:26;;4460:71;4528:1;4517:9;4513:17;4504:6;4460:71;:::i;:::-;4316:222;;;;:::o;4544:332::-;4665:4;4703:2;4692:9;4688:18;4680:26;;4716:71;4784:1;4773:9;4769:17;4760:6;4716:71;:::i;:::-;4797:72;4865:2;4854:9;4850:18;4841:6;4797:72;:::i;:::-;4544:332;;;;;:::o;4882:329::-;4941:6;4990:2;4978:9;4969:7;4965:23;4961:32;4958:119;;;4996:79;;:::i;:::-;4958:119;5116:1;5141:53;5186:7;5177:6;5166:9;5162:22;5141:53;:::i;:::-;5131:63;;5087:117;4882:329;;;;:::o;5217:169::-;5301:11;5335:6;5330:3;5323:19;5375:4;5370:3;5366:14;5351:29;;5217:169;;;;:::o;5392:173::-;5532:25;5528:1;5520:6;5516:14;5509:49;5392:173;:::o;5571:366::-;5713:3;5734:67;5798:2;5793:3;5734:67;:::i;:::-;5727:74;;5810:93;5899:3;5810:93;:::i;:::-;5928:2;5923:3;5919:12;5912:19;;5571:366;;;:::o;5943:419::-;6109:4;6147:2;6136:9;6132:18;6124:26;;6196:9;6190:4;6186:20;6182:1;6171:9;6167:17;6160:47;6224:131;6350:4;6224:131;:::i;:::-;6216:139;;5943:419;;;:::o;6368:442::-;6517:4;6555:2;6544:9;6540:18;6532:26;;6568:71;6636:1;6625:9;6621:17;6612:6;6568:71;:::i;:::-;6649:72;6717:2;6706:9;6702:18;6693:6;6649:72;:::i;:::-;6731;6799:2;6788:9;6784:18;6775:6;6731:72;:::i;:::-;6368:442;;;;;;:::o;6816:90::-;6850:7;6893:5;6886:13;6879:21;6868:32;;6816:90;;;:::o;6912:116::-;6982:21;6997:5;6982:21;:::i;:::-;6975:5;6972:32;6962:60;;7018:1;7015;7008:12;6962:60;6912:116;:::o;7034:137::-;7088:5;7119:6;7113:13;7104:22;;7135:30;7159:5;7135:30;:::i;:::-;7034:137;;;;:::o;7177:345::-;7244:6;7293:2;7281:9;7272:7;7268:23;7264:32;7261:119;;;7299:79;;:::i;:::-;7261:119;7419:1;7444:61;7497:7;7488:6;7477:9;7473:22;7444:61;:::i;:::-;7434:71;;7390:125;7177:345;;;;:::o;7528:165::-;7668:17;7664:1;7656:6;7652:14;7645:41;7528:165;:::o;7699:366::-;7841:3;7862:67;7926:2;7921:3;7862:67;:::i;:::-;7855:74;;7938:93;8027:3;7938:93;:::i;:::-;8056:2;8051:3;8047:12;8040:19;;7699:366;;;:::o;8071:419::-;8237:4;8275:2;8264:9;8260:18;8252:26;;8324:9;8318:4;8314:20;8310:1;8299:9;8295:17;8288:47;8352:131;8478:4;8352:131;:::i;:::-;8344:139;;8071:419;;;:::o;8496:180::-;8544:77;8541:1;8534:88;8641:4;8638:1;8631:15;8665:4;8662:1;8655:15;8682:191;8722:3;8741:20;8759:1;8741:20;:::i;:::-;8736:25;;8775:20;8793:1;8775:20;:::i;:::-;8770:25;;8818:1;8815;8811:9;8804:16;;8839:3;8836:1;8833:10;8830:36;;;8846:18;;:::i;:::-;8830:36;8682:191;;;;:::o;8879:171::-;9019:23;9015:1;9007:6;9003:14;8996:47;8879:171;:::o;9056:366::-;9198:3;9219:67;9283:2;9278:3;9219:67;:::i;:::-;9212:74;;9295:93;9384:3;9295:93;:::i;:::-;9413:2;9408:3;9404:12;9397:19;;9056:366;;;:::o;9428:419::-;9594:4;9632:2;9621:9;9617:18;9609:26;;9681:9;9675:4;9671:20;9667:1;9656:9;9652:17;9645:47;9709:131;9835:4;9709:131;:::i;:::-;9701:139;;9428:419;;;:::o;9853:410::-;9893:7;9916:20;9934:1;9916:20;:::i;:::-;9911:25;;9950:20;9968:1;9950:20;:::i;:::-;9945:25;;10005:1;10002;9998:9;10027:30;10045:11;10027:30;:::i;:::-;10016:41;;10206:1;10197:7;10193:15;10190:1;10187:22;10167:1;10160:9;10140:83;10117:139;;10236:18;;:::i;:::-;10117:139;9901:362;9853:410;;;;:::o;10269:180::-;10317:77;10314:1;10307:88;10414:4;10411:1;10404:15;10438:4;10435:1;10428:15;10455:185;10495:1;10512:20;10530:1;10512:20;:::i;:::-;10507:25;;10546:20;10564:1;10546:20;:::i;:::-;10541:25;;10585:1;10575:35;;10590:18;;:::i;:::-;10575:35;10632:1;10629;10625:9;10620:14;;10455:185;;;;:::o;10646:194::-;10686:4;10706:20;10724:1;10706:20;:::i;:::-;10701:25;;10740:20;10758:1;10740:20;:::i;:::-;10735:25;;10784:1;10781;10777:9;10769:17;;10808:1;10802:4;10799:11;10796:37;;;10813:18;;:::i;:::-;10796:37;10646:194;;;;:::o;10846:332::-;10967:4;11005:2;10994:9;10990:18;10982:26;;11018:71;11086:1;11075:9;11071:17;11062:6;11018:71;:::i;:::-;11099:72;11167:2;11156:9;11152:18;11143:6;11099:72;:::i;:::-;10846:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "822200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateShares(uint256,uint256,uint256)": "infinite",
								"deposit(uint256,uint256,uint256)": "infinite",
								"getPoolInfo(uint256,uint256)": "infinite",
								"getUserShares(uint256,uint256,address)": "infinite",
								"owner()": "2522",
								"reactToken()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 653,
									"end": 757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 653,
									"end": 757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 694,
									"end": 704,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 737,
									"end": 748,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 717,
									"end": 727,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 727,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 717,
									"end": 749,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 653,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3966,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024dd28e3f5d0230880aaa50f3b3d02d56a3f2a84a28eae46870e6165468a813664736f6c63430008180033",
									".code": [
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "A466F542"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "C8C85BAD"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "EEA04D09"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "AEEF8A"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "127E2B15"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "441A3E70"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 174,
											"end": 3966,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 850,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 850,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 220,
											"end": 244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2639,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2639,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3703,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3703,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3703,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3397,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3397,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3397,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1642,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1642,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1642,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 955,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 946,
											"end": 956,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 938,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1092,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1188,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1230,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1188,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1338,
											"end": 1348,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1314,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1314,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1314,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1306,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1306,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1458,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1498,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1546,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 927,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 927,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 927,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 1580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2809,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2857,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2842,
											"end": 2857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2869,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2902,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2880,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2880,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 2999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2986,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2967,
											"end": 2986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2986,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2967,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2967,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2966,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2966,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3068,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3116,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3190,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3191,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 3278,
											"end": 3288,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3258,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3258,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3258,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3250,
											"end": 3325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3250,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3915,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3955,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3566,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3572,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3629,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3630,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3686,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3667,
											"end": 3686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3686,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1789,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 1881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1991,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1963,
											"end": 2078,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2011,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1963,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2122,
											"end": 2141,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2122,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2122,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2101,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2101,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2183,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2183,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2204,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2207,
											"end": 2224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2207,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2517,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2498,
											"end": 2517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2498,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2498,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2467,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2461,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2461,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2461,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2460,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1441,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1315,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1434,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1390,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1435,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1370,
											"end": 1435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1370,
											"end": 1435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1507,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1447,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1655,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1513,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1614,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1623,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1623,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1647,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1623,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1614,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1648,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1614,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1596,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1787,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1661,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1744,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1744,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1793,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1890,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1927,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1890,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2098,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1939,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2040,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2092,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2262,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2262,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2464,
											"end": 2471,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2483,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2572,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2453,
											"end": 2572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2491,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2491,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2570,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2491,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2572,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2453,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2681,
											"end": 2688,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2636,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2636,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2689,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2806,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2764,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2817,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2764,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2936,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2840,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2924,
											"end": 2929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2906,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2930,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2906,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2930,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2942,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3047,
											"end": 3052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3029,
											"end": 3053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3053,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3029,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 3060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3210,
											"end": 3281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3281,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3210,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3367,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3392,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3513,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3522,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3695,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3677,
											"end": 3796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3715,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3715,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3794,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3715,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3677,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 3902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3860,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3860,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3913,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3806,
											"end": 3923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4033,
											"end": 4040,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4031,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3988,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3988,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4041,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 4051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4161,
											"end": 4168,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4116,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4297,
											"end": 4302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4279,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4510,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4460,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4706,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4773,
											"end": 4782,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4760,
											"end": 4766,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4716,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4787,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4716,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4797,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4869,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4797,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 4976,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4988,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4993,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4958,
											"end": 5077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4996,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4996,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4996,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5077,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4958,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5141,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5141,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5141,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 5211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5342,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 5565,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5392,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5557,
											"name": "PUSH",
											"source": 4,
											"value": "416D6F756E74206D75737420626520706F736974697665000000000000000000"
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5516,
											"end": 5530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 5565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 5565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5937,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5571,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5734,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5801,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5734,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5899,
											"end": 5902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5810,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5903,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5810,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5919,
											"end": 5931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6362,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5943,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6190,
											"end": 6194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6160,
											"end": 6207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6224,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6224,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6224,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6224,
											"end": 6355,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 6224,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6216,
											"end": 6355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6216,
											"end": 6355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6532,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6532,
											"end": 6558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6568,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6568,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6568,
											"end": 6639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6568,
											"end": 6639,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6568,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6649,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6721,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6649,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6731,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6799,
											"end": 6801,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6731,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6731,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6731,
											"end": 6803,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6731,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6906,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6816,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6886,
											"end": 6899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 6900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 7028,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6912,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6997,
											"end": 7002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6982,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 6980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6972,
											"end": 7004,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6962,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6962,
											"end": 7022,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7018,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6962,
											"end": 7022,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6962,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 7028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 7028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7088,
											"end": 7093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7113,
											"end": 7126,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7159,
											"end": 7164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7135,
											"end": 7165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7165,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7135,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7281,
											"end": 7290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7272,
											"end": 7279,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7268,
											"end": 7291,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7264,
											"end": 7296,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7380,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7261,
											"end": 7380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7299,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7299,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7299,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7299,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7299,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7380,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7261,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7444,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7497,
											"end": 7504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7488,
											"end": 7494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 7495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7444,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7444,
											"end": 7505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7444,
											"end": 7505,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7444,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7434,
											"end": 7505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7434,
											"end": 7505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7693,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7528,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7664,
											"end": 7665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7645,
											"end": 7686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 8065,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7699,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 7921,
											"end": 7924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7862,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7862,
											"end": 7929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7862,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 7862,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7855,
											"end": 7929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7855,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7938,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7938,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7938,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7938,
											"end": 8031,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 7938,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8040,
											"end": 8059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8040,
											"end": 8059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 8065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 8065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 8065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8490,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 8071,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8277,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8264,
											"end": 8273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8278,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8314,
											"end": 8334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8308,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8288,
											"end": 8335,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8478,
											"end": 8482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 8352,
											"end": 8483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8483,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8352,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8496,
											"end": 8676,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8496,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8544,
											"end": 8621,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8541,
											"end": 8542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8641,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8631,
											"end": 8646,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8670,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8741,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8761,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8741,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8736,
											"end": 8761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8736,
											"end": 8761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8793,
											"end": 8794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8775,
											"end": 8795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8770,
											"end": 8795,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8770,
											"end": 8795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8818,
											"end": 8819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8836,
											"end": 8837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8833,
											"end": 8843,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8830,
											"end": 8866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8846,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8866,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8830,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 9050,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8879,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9042,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F2073686172657320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9003,
											"end": 9017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 9050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 9050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9422,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 9056,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9198,
											"end": 9201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 9278,
											"end": 9281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9219,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 9219,
											"end": 9286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9219,
											"end": 9286,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9219,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9295,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9384,
											"end": 9387,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9295,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 9295,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9295,
											"end": 9388,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9295,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9397,
											"end": 9416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9397,
											"end": 9416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9428,
											"end": 9847,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 9428,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9652,
											"end": 9669,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9645,
											"end": 9692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 9709,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9840,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9709,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9428,
											"end": 9847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9428,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9428,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9428,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9893,
											"end": 9900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9934,
											"end": 9935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9916,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9936,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9916,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9968,
											"end": 9969,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9950,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9945,
											"end": 9970,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9945,
											"end": 9970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10005,
											"end": 10006,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10045,
											"end": 10056,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10027,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10057,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10027,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10016,
											"end": 10057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10016,
											"end": 10057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10206,
											"end": 10207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10197,
											"end": 10204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10193,
											"end": 10208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10209,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10169,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10140,
											"end": 10223,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10117,
											"end": 10256,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10236,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 10236,
											"end": 10254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10254,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10236,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10256,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10117,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9901,
											"end": 10263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10449,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10269,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10317,
											"end": 10394,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10307,
											"end": 10395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10414,
											"end": 10418,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10404,
											"end": 10419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10435,
											"end": 10436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10428,
											"end": 10443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10512,
											"end": 10532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10507,
											"end": 10532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10507,
											"end": 10532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10564,
											"end": 10565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10546,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10575,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10575,
											"end": 10610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10590,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10590,
											"end": 10608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10608,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10590,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10575,
											"end": 10610,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10575,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10629,
											"end": 10630,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10625,
											"end": 10634,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10620,
											"end": 10634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10620,
											"end": 10634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10706,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10740,
											"end": 10760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10760,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10740,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10777,
											"end": 10786,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10769,
											"end": 10786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10769,
											"end": 10786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10802,
											"end": 10806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10799,
											"end": 10810,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 10813,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10796,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10646,
											"end": 10840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10967,
											"end": 10971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10994,
											"end": 11003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 11008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10982,
											"end": 11008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10982,
											"end": 11008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11075,
											"end": 11084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11071,
											"end": 11088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11062,
											"end": 11068,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 11018,
											"end": 11089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 11165,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11099,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10846,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"reactsPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateShares(uint256,uint256,uint256)": "eea04d09",
							"deposit(uint256,uint256,uint256)": "00aeef8a",
							"getPoolInfo(uint256,uint256)": "c8c85bad",
							"getUserShares(uint256,uint256,address)": "a466f542",
							"owner()": "8da5cb5b",
							"reactToken()": "127e2b15",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reactToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactSubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactSubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactSubId\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposited\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactSubId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reactToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reactSubId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"reactsPool.sol\":\"ReactLiquidityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"reactsPool.sol\":{\"keccak256\":\"0xdbaa3d1f375e57070dfdfb71af4cfbc94447bd6bd30ccf5beeadc70d525fe91f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d5a85f2052108fd1b52b88d7273b877ec19b69748e4d83fa1fed4630c7173bf\",\"dweb:/ipfs/QmdZvijf4pnJVYNJr2pecTAvDTdfypKAJxuLTFhYYLEhhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "reactsPool.sol:ReactLiquidityPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 264,
								"contract": "reactsPool.sol:ReactLiquidityPool",
								"label": "reactToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 284,
								"contract": "reactsPool.sol:ReactLiquidityPool",
								"label": "nftPools",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(NFTPool)279_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(NFTPool)279_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ReactLiquidityPool.NFTPool)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTPool)279_storage"
							},
							"t_mapping(t_uint256,t_struct(Pool)273_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ReactLiquidityPool.Pool)",
								"numberOfBytes": "32",
								"value": "t_struct(Pool)273_storage"
							},
							"t_struct(NFTPool)279_storage": {
								"encoding": "inplace",
								"label": "struct ReactLiquidityPool.NFTPool",
								"members": [
									{
										"astId": 278,
										"contract": "reactsPool.sol:ReactLiquidityPool",
										"label": "reacts",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_struct(Pool)273_storage)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Pool)273_storage": {
								"encoding": "inplace",
								"label": "struct ReactLiquidityPool.Pool",
								"members": [
									{
										"astId": 266,
										"contract": "reactsPool.sol:ReactLiquidityPool",
										"label": "totalShares",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 268,
										"contract": "reactsPool.sol:ReactLiquidityPool",
										"label": "totalDeposited",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 272,
										"contract": "reactsPool.sol:ReactLiquidityPool",
										"label": "userShares",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"reactsPool.sol": {
				"ast": {
					"absolutePath": "reactsPool.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"ReactLiquidityPool": [
							597
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 226,
							"src": "60:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 148,
							"src": "118:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"205:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "205:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "205:7:3"
								}
							],
							"canonicalName": "ReactLiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 597,
							"linearizedBaseContracts": [
								597,
								147,
								255
							],
							"name": "ReactLiquidityPool",
							"nameLocation": "183:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "127e2b15",
									"id": 264,
									"mutability": "mutable",
									"name": "reactToken",
									"nameLocation": "234:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 597,
									"src": "220:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"220:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "220:6:3"
										},
										"referencedDeclaration": 225,
										"src": "220:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ReactLiquidityPool.Pool",
									"id": 273,
									"members": [
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "284:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 273,
											"src": "276:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 265,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "276:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "totalDeposited",
											"nameLocation": "314:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 273,
											"src": "306:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "userShares",
											"nameLocation": "367:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 273,
											"src": "339:38:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 271,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "339:27:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "260:4:3",
									"nodeType": "StructDefinition",
									"scope": 597,
									"src": "253:132:3",
									"visibility": "public"
								},
								{
									"canonicalName": "ReactLiquidityPool.NFTPool",
									"id": 279,
									"members": [
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "reacts",
											"nameLocation": "444:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "419:31:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
												"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool)"
											},
											"typeName": {
												"id": 277,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "419:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
													"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 275,
														"name": "Pool",
														"nameLocations": [
															"438:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 273,
														"src": "438:4:3"
													},
													"referencedDeclaration": 273,
													"src": "438:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
														"typeString": "struct ReactLiquidityPool.Pool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTPool",
									"nameLocation": "400:7:3",
									"nodeType": "StructDefinition",
									"scope": 597,
									"src": "393:102:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 284,
									"mutability": "mutable",
									"name": "nftPools",
									"nameLocation": "615:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 597,
									"src": "579:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
										"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool)"
									},
									"typeName": {
										"id": 283,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 280,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "587:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "579:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
											"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 282,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 281,
												"name": "NFTPool",
												"nameLocations": [
													"598:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 279,
												"src": "598:7:3"
											},
											"referencedDeclaration": 279,
											"src": "598:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
												"typeString": "struct ReactLiquidityPool.NFTPool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "706:51:3",
										"statements": [
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "reactToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "717:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 295,
																"name": "_reactToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "737:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 294,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "730:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "730:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "717:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "717:32:3"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 289,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "694:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "698:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "694:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 291,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 288,
												"name": "Ownable",
												"nameLocations": [
													"686:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "686:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "686:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_reactToken",
												"nameLocation": "673:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "665:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:21:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:3"
									},
									"scope": 597,
									"src": "653:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "927:653:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "946:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "955:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "946:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520706f736974697665",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "958:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															},
															"value": "Amount must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "938:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "938:46:3"
											},
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "nftPool",
														"nameLocation": "1011:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "995:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
															"typeString": "struct ReactLiquidityPool.NFTPool"
														},
														"typeName": {
															"id": 317,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 316,
																"name": "NFTPool",
																"nameLocations": [
																	"995:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 279,
																"src": "995:7:3"
															},
															"referencedDeclaration": 279,
															"src": "995:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"baseExpression": {
														"id": 319,
														"name": "nftPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1021:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool storage ref)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1030:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1021:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTPool_$279_storage",
														"typeString": "struct ReactLiquidityPool.NFTPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "995:41:3"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1060:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "1047:17:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
															"typeString": "struct ReactLiquidityPool.Pool"
														},
														"typeName": {
															"id": 324,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 323,
																"name": "Pool",
																"nameLocations": [
																	"1047:4:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "1047:4:3"
															},
															"referencedDeclaration": 273,
															"src": "1047:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 326,
															"name": "nftPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "1067:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1075:6:3",
														"memberName": "reacts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "1067:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool storage ref)"
														}
													},
													"id": 329,
													"indexExpression": {
														"id": 328,
														"name": "reactSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "1082:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1067:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage",
														"typeString": "struct ReactLiquidityPool.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:46:3"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "1179:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "1171:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1171:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 334,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1204:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 335,
															"name": "reactSubId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "1211:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "1223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "calculateShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "1188:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1171:59:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 342,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1338:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1342:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1338:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 346,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1358:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ReactLiquidityPool_$597",
																				"typeString": "contract ReactLiquidityPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ReactLiquidityPool_$597",
																				"typeString": "contract ReactLiquidityPool"
																			}
																		],
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1350:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 344,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1350:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1350:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 348,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1365:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 340,
																	"name": "reactToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "1314:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1325:12:3",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "1314:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1314:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1374:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1306:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1306:86:3"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 353,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "1458:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1463:14:3",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1458:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 356,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "1481:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1458:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1458:29:3"
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 359,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "1498:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																	"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1503:10:3",
															"memberName": "userShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "1498:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 364,
														"indexExpression": {
															"expression": {
																"id": 361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1514:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1518:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1514:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1498:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 365,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1529:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1498:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "1498:37:3"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 368,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "1546:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1551:11:3",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "1546:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 371,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1566:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1546:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "1546:26:3"
											}
										]
									},
									"functionSelector": "00aeef8a",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "859:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "875:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "867:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "reactSubId",
												"nameLocation": "890:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "882:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "910:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "902:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:51:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:0:3"
									},
									"scope": 597,
									"src": "850:730:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1748:794:3",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "nftPool",
														"nameLocation": "1771:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "1755:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
															"typeString": "struct ReactLiquidityPool.NFTPool"
														},
														"typeName": {
															"id": 387,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 386,
																"name": "NFTPool",
																"nameLocations": [
																	"1755:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 279,
																"src": "1755:7:3"
															},
															"referencedDeclaration": 279,
															"src": "1755:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"baseExpression": {
														"id": 389,
														"name": "nftPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1781:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool storage ref)"
														}
													},
													"id": 391,
													"indexExpression": {
														"id": 390,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "1790:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1781:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTPool_$279_storage",
														"typeString": "struct ReactLiquidityPool.NFTPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1755:41:3"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1816:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "1803:17:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
															"typeString": "struct ReactLiquidityPool.Pool"
														},
														"typeName": {
															"id": 394,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 393,
																"name": "Pool",
																"nameLocations": [
																	"1803:4:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "1803:4:3"
															},
															"referencedDeclaration": 273,
															"src": "1803:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 400,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 396,
															"name": "nftPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "1823:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool storage pointer"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1831:6:3",
														"memberName": "reacts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "1823:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool storage ref)"
														}
													},
													"id": 399,
													"indexExpression": {
														"id": 398,
														"name": "reactSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1838:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1823:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage",
														"typeString": "struct ReactLiquidityPool.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1803:46:3"
											},
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "diminishingFactor",
														"nameLocation": "1864:17:3",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "1856:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"hexValue": "3130303030",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1884:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1856:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 405,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1967:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1972:14:3",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1967:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1990:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1967:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "1963:115:3",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "1993:85:3",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "2011:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2020:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2011:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 385,
															"id": 412,
															"nodeType": "Return",
															"src": "2004:17:3"
														}
													]
												}
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "2094:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "2086:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "diminishingFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2101:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 418,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "2122:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																			"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2127:14:3",
																	"memberName": "totalDeposited",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "2122:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 420,
																	"name": "diminishingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2144:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2122:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 422,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2121:41:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2101:61:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2086:76:3"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2169:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "2176:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 427,
																	"name": "diminishingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2183:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2203:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2183:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2176:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 434,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2231:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2176:59:3",
														"trueExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "diminishingFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2207:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2227:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2207:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2169:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "2169:66:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 438,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2461:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 439,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2470:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																				"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2475:11:3",
																		"memberName": "totalShares",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 266,
																		"src": "2470:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2461:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 442,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "2489:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2461:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 444,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2460:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 445,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "2498:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																			"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2503:14:3",
																	"memberName": "totalDeposited",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "2498:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 447,
																	"name": "diminishingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2520:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2498:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 449,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2497:41:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2460:78:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 451,
												"nodeType": "Return",
												"src": "2453:85:3"
											}
										]
									},
									"functionSelector": "eea04d09",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateShares",
									"nameLocation": "1651:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "1675:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1667:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "reactSubId",
												"nameLocation": "1690:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1682:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1710:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1702:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:51:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1739:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:3"
									},
									"scope": 597,
									"src": "1642:900:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "2701:632:3",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "nftPool",
														"nameLocation": "2728:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "2712:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
															"typeString": "struct ReactLiquidityPool.NFTPool"
														},
														"typeName": {
															"id": 461,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 460,
																"name": "NFTPool",
																"nameLocations": [
																	"2712:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 279,
																"src": "2712:7:3"
															},
															"referencedDeclaration": 279,
															"src": "2712:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"baseExpression": {
														"id": 463,
														"name": "nftPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2738:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool storage ref)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2747:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2738:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTPool_$279_storage",
														"typeString": "struct ReactLiquidityPool.NFTPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2712:41:3"
											},
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "2777:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "2764:17:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
															"typeString": "struct ReactLiquidityPool.Pool"
														},
														"typeName": {
															"id": 468,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 467,
																"name": "Pool",
																"nameLocations": [
																	"2764:4:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "2764:4:3"
															},
															"referencedDeclaration": 273,
															"src": "2764:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 470,
															"name": "nftPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2784:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool storage pointer"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2792:6:3",
														"memberName": "reacts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "2784:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool storage ref)"
														}
													},
													"id": 473,
													"indexExpression": {
														"id": 472,
														"name": "reactSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2799:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2784:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage",
														"typeString": "struct ReactLiquidityPool.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2764:46:3"
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "userShares",
														"nameLocation": "2829:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "2821:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2821:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 477,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "2842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2847:10:3",
														"memberName": "userShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "2842:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 481,
													"indexExpression": {
														"expression": {
															"id": 479,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2858:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2862:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2858:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2842:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2821:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 484,
																"name": "userShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "2888:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2901:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2888:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073686172657320746f207769746864726177",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2904:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d",
																"typeString": "literal_string \"No shares to withdraw\""
															},
															"value": "No shares to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d95b35dd1dd60343c34cc4835b7931243cd4ce1e3dc0c2fb3c3d67a2f4f277d",
																"typeString": "literal_string \"No shares to withdraw\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2880:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2880:48:3"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "withdrawAmount",
														"nameLocation": "2949:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "2941:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 492,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2967:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																			"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2972:14:3",
																	"memberName": "totalDeposited",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "2967:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 494,
																	"name": "userShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "2989:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2967:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 496,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2966:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 497,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3003:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3008:11:3",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "3003:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2966:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2941:78:3"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 501,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3068:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3073:14:3",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "3068:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 504,
														"name": "withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3091:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "3068:37:3"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 507,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3116:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3121:11:3",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "3116:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 510,
														"name": "userShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3136:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3116:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "3116:30:3"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3157:34:3",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 513,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "3164:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																	"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3169:10:3",
															"memberName": "userShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "3164:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"expression": {
																"id": 515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3180:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3184:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3180:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3164:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3157:34:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 523,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3278:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3282:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3278:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 525,
																	"name": "withdrawAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3290:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 521,
																	"name": "reactToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3258:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3269:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "3258:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3307:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3250:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3250:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "3250:75:3"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2648:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "2665:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "2657:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "reactSubId",
												"nameLocation": "2680:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "2672:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:35:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:0:3"
									},
									"scope": 597,
									"src": "2639:694:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "3521:174:3",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "nftPool",
														"nameLocation": "3548:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3532:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
															"typeString": "struct ReactLiquidityPool.NFTPool"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "NFTPool",
																"nameLocations": [
																	"3532:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 279,
																"src": "3532:7:3"
															},
															"referencedDeclaration": 279,
															"src": "3532:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "nftPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "3558:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool storage ref)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3567:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3558:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTPool_$279_storage",
														"typeString": "struct ReactLiquidityPool.NFTPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3532:41:3"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3597:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3584:17:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
															"typeString": "struct ReactLiquidityPool.Pool"
														},
														"typeName": {
															"id": 550,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 549,
																"name": "Pool",
																"nameLocations": [
																	"3584:4:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "3584:4:3"
															},
															"referencedDeclaration": 273,
															"src": "3584:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 552,
															"name": "nftPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3604:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3612:6:3",
														"memberName": "reacts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "3604:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool storage ref)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "reactSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3619:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3604:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage",
														"typeString": "struct ReactLiquidityPool.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:46:3"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 557,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "3649:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																	"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3654:11:3",
															"memberName": "totalShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 266,
															"src": "3649:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 559,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "3667:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																	"typeString": "struct ReactLiquidityPool.Pool storage pointer"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3672:14:3",
															"memberName": "totalDeposited",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "3667:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 561,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3648:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 541,
												"id": 562,
												"nodeType": "Return",
												"src": "3641:46:3"
											}
										]
									},
									"functionSelector": "c8c85bad",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nameLocation": "3406:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "3426:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3418:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "reactSubId",
												"nameLocation": "3441:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3433:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:35:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "3484:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3476:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "totalDeposited",
												"nameLocation": "3505:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3497:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:45:3"
									},
									"scope": 597,
									"src": "3397:298:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "3807:156:3",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "nftPool",
														"nameLocation": "3834:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "3818:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
															"typeString": "struct ReactLiquidityPool.NFTPool"
														},
														"typeName": {
															"id": 576,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 575,
																"name": "NFTPool",
																"nameLocations": [
																	"3818:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 279,
																"src": "3818:7:3"
															},
															"referencedDeclaration": 279,
															"src": "3818:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"baseExpression": {
														"id": 578,
														"name": "nftPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "3844:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTPool_$279_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.NFTPool storage ref)"
														}
													},
													"id": 580,
													"indexExpression": {
														"id": 579,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "3853:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3844:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTPool_$279_storage",
														"typeString": "struct ReactLiquidityPool.NFTPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3818:41:3"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3883:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "3870:17:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
															"typeString": "struct ReactLiquidityPool.Pool"
														},
														"typeName": {
															"id": 583,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 582,
																"name": "Pool",
																"nameLocations": [
																	"3870:4:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "3870:4:3"
															},
															"referencedDeclaration": 273,
															"src": "3870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 585,
															"name": "nftPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "3890:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTPool_$279_storage_ptr",
																"typeString": "struct ReactLiquidityPool.NFTPool storage pointer"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3898:6:3",
														"memberName": "reacts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "3890:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$273_storage_$",
															"typeString": "mapping(uint256 => struct ReactLiquidityPool.Pool storage ref)"
														}
													},
													"id": 588,
													"indexExpression": {
														"id": 587,
														"name": "reactSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3905:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3890:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$273_storage",
														"typeString": "struct ReactLiquidityPool.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3870:46:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 590,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3934:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$273_storage_ptr",
																"typeString": "struct ReactLiquidityPool.Pool storage pointer"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3939:10:3",
														"memberName": "userShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "3934:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 593,
													"indexExpression": {
														"id": 592,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "3950:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3934:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 594,
												"nodeType": "Return",
												"src": "3927:28:3"
											}
										]
									},
									"functionSelector": "a466f542",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserShares",
									"nameLocation": "3712:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "3734:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3726:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "reactSubId",
												"nameLocation": "3749:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3741:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3769:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3761:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:49:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3798:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:9:3"
									},
									"scope": 597,
									"src": "3703:260:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "174:3792:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:3935:3"
				},
				"id": 3
			}
		}
	}
}